#if 0
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
; shader hash: 2bc1ce3ed8d4da2f2e6ca9db45f8f89b
;
; Pipeline Runtime Information: 
;
;
;
; Buffer Definitions:
;
; cbuffer globalConstants
; {
;
;   struct globalConstants
;   {
;
;       column_major float4x4 gViewToClip;            ; Offset:    0
;       column_major float4x4 gViewToWorld;           ; Offset:   64
;       float4 gFrustum;                              ; Offset:  128
;       float4 gHitDistParams;                        ; Offset:  144
;       float4 gViewVectorWorld;                      ; Offset:  160
;       float4 gViewVectorWorldPrev;                  ; Offset:  176
;       float3 gMvScale;                              ; Offset:  192
;       float gDebug;                                 ; Offset:  204
;       float2 gInvScreenSize;                        ; Offset:  208
;       float2 gScreenSize;                           ; Offset:  216
;       float2 gInvRectSize;                          ; Offset:  224
;       float2 gRectSize;                             ; Offset:  232
;       float2 gRectSizePrev;                         ; Offset:  240
;       float2 gResolutionScale;                      ; Offset:  248
;       float2 gRectOffset;                           ; Offset:  256
;       float2 gSensitivityToDarkness;                ; Offset:  264
;       uint2 gRectOrigin;                            ; Offset:  272
;       float gNonReferenceAccumulation;              ; Offset:  280
;       float gOrthoMode;                             ; Offset:  284
;       float gUnproject;                             ; Offset:  288
;       float gDenoisingRange;                        ; Offset:  292
;       float gPlaneDistSensitivity;                  ; Offset:  296
;       float gFramerateScale;                        ; Offset:  300
;       float gBlurRadius;                            ; Offset:  304
;       float gMaxAccumulatedFrameNum;                ; Offset:  308
;       float gMaxFastAccumulatedFrameNum;            ; Offset:  312
;       float gAntiFirefly;                           ; Offset:  316
;       float gLobeAngleFraction;                     ; Offset:  320
;       float gRoughnessFraction;                     ; Offset:  324
;       float gResponsiveAccumulationRoughnessThreshold;; Offset:  328
;       float gDiffPrepassBlurRadius;                 ; Offset:  332
;       float gSpecPrepassBlurRadius;                 ; Offset:  336
;       float gHistoryFixFrameNum;                    ; Offset:  340
;       float gMinRectDimMulUnproject;                ; Offset:  344
;       uint gIsWorldSpaceMotionEnabled;              ; Offset:  348
;       uint gFrameIndex;                             ; Offset:  352
;       uint gDiffMaterialMask;                       ; Offset:  356
;       uint gSpecMaterialMask;                       ; Offset:  360
;       uint gResetHistory;                           ; Offset:  364
;       float4 gRotator;                              ; Offset:  368
;   
;   } globalConstants;                                ; Offset:    0 Size:   384
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; globalConstants                   cbuffer      NA          NA     CB0            cb0     1
; gNearestClamp                     sampler      NA          NA      S0             s0     1
; gIn_Normal_Roughness              texture     f32          2d      T0             t0     1
; gIn_Data1                         texture     f32          2d      T1             t1     1
; gIn_Diff                          texture     f32          2d      T2             t2     1
; gIn_ViewZ                         texture     f32          2d      T3             t3     1
; gOut_Normal_Roughness                 UAV     f32          2d      U0             u0     1
; gOut_Diff                             UAV     f32          2d      U1             u1     1
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:8-i16:16-i32:32-i64:64-f16:16-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%"class.Texture2D<vector<float, 4> >" = type { <4 x float>, %"class.Texture2D<vector<float, 4> >::mips_type" }
%"class.Texture2D<vector<float, 4> >::mips_type" = type { i32 }
%"class.Texture2D<float>" = type { float, %"class.Texture2D<float>::mips_type" }
%"class.Texture2D<float>::mips_type" = type { i32 }
%"class.RWTexture2D<vector<float, 4> >" = type { <4 x float> }
%globalConstants = type { %class.matrix.float.4.4, %class.matrix.float.4.4, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <3 x float>, float, <2 x float>, <2 x float>, <2 x float>, <2 x float>, <2 x float>, <2 x float>, <2 x float>, <2 x float>, <2 x i32>, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, <4 x float> }
%class.matrix.float.4.4 = type { [4 x <4 x float>] }
%struct.SamplerState = type { i32 }

define void @main() {
  %1 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 1, i32 1, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %3 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 3, i32 3, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %4 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 2, i32 2, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %5 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 1, i32 1, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %6 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 0, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %7 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 3, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %8 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %9 = call i32 @dx.op.threadId.i32(i32 93, i32 0)  ; ThreadId(component)
  %10 = call i32 @dx.op.threadId.i32(i32 93, i32 1)  ; ThreadId(component)
  %11 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %8, i32 17)  ; CBufferLoadLegacy(handle,regIndex)
  %12 = sitofp i32 %9 to float
  %13 = sitofp i32 %10 to float
  %14 = fadd fast float %12, 5.000000e-01
  %15 = fadd fast float %13, 5.000000e-01
  %16 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %8, i32 14)  ; CBufferLoadLegacy(handle,regIndex)
  %17 = extractvalue %dx.types.CBufRet.f32 %16, 0
  %18 = extractvalue %dx.types.CBufRet.f32 %16, 1
  %19 = fmul fast float %17, %14
  %20 = fmul fast float %18, %15
  %21 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %3, i32 0, i32 %9, i32 %10, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %22 = extractvalue %dx.types.ResRet.f32 %21, 0
  %23 = fmul fast float %22, 8.000000e+00
  %24 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %8, i32 18)  ; CBufferLoadLegacy(handle,regIndex)
  %25 = extractvalue %dx.types.CBufRet.f32 %24, 1
  %26 = fcmp fast ogt float %23, %25
  br i1 %26, label %27, label %28, !dx.controlflow.hints !21

; <label>:27                                      ; preds = %0
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %2, i32 %9, i32 %10, i32 undef, float 0x3FE0101020000000, float 0x3FE0101020000000, float 0x3FE0101020000000, float 0x3F70101020000000, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  br label %965

; <label>:28                                      ; preds = %0
  %29 = extractvalue %dx.types.CBufRet.i32 %11, 1
  %30 = add i32 %29, %10
  %31 = extractvalue %dx.types.CBufRet.i32 %11, 0
  %32 = add i32 %31, %9
  %33 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %6, i32 0, i32 %32, i32 %30, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %34 = extractvalue %dx.types.ResRet.f32 %33, 0
  %35 = extractvalue %dx.types.ResRet.f32 %33, 1
  %36 = extractvalue %dx.types.ResRet.f32 %33, 2
  %37 = extractvalue %dx.types.ResRet.f32 %33, 3
  %38 = fmul fast float %34, 2.000000e+00
  %39 = fmul fast float %35, 2.000000e+00
  %40 = fadd fast float %38, -1.000000e+00
  %41 = fadd fast float %39, -1.000000e+00
  %42 = call float @dx.op.unary.f32(i32 6, float %40)  ; FAbs(value)
  %43 = fsub fast float 1.000000e+00, %42
  %44 = call float @dx.op.unary.f32(i32 6, float %41)  ; FAbs(value)
  %45 = fsub fast float %43, %44
  %46 = fsub fast float -0.000000e+00, %45
  %47 = call float @dx.op.unary.f32(i32 7, float %46)  ; Saturate(value)
  %48 = fcmp fast olt float %40, 0.000000e+00
  %49 = fcmp fast olt float %41, 0.000000e+00
  %50 = select i1 %48, float -1.000000e+00, float 1.000000e+00
  %51 = select i1 %49, float -1.000000e+00, float 1.000000e+00
  %52 = fmul fast float %50, %47
  %53 = fmul fast float %51, %47
  %54 = fsub fast float %40, %52
  %55 = fsub fast float %41, %53
  %56 = call float @dx.op.dot3.f32(i32 55, float %54, float %55, float %45, float %54, float %55, float %45)  ; Dot3(ax,ay,az,bx,by,bz)
  %57 = call float @dx.op.unary.f32(i32 25, float %56)  ; Rsqrt(value)
  %58 = fmul fast float %54, %57
  %59 = fmul fast float %55, %57
  %60 = fmul fast float %57, %45
  %61 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %8, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %62 = extractvalue %dx.types.CBufRet.f32 %61, 0
  %63 = extractvalue %dx.types.CBufRet.f32 %61, 1
  %64 = extractvalue %dx.types.CBufRet.f32 %61, 2
  %65 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %8, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %66 = extractvalue %dx.types.CBufRet.f32 %65, 0
  %67 = extractvalue %dx.types.CBufRet.f32 %65, 1
  %68 = extractvalue %dx.types.CBufRet.f32 %65, 2
  %69 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %8, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %70 = extractvalue %dx.types.CBufRet.f32 %69, 0
  %71 = extractvalue %dx.types.CBufRet.f32 %69, 1
  %72 = extractvalue %dx.types.CBufRet.f32 %69, 2
  %73 = fmul fast float %58, %62
  %74 = call float @dx.op.tertiary.f32(i32 46, float %63, float %59, float %73)  ; FMad(a,b,c)
  %75 = call float @dx.op.tertiary.f32(i32 46, float %64, float %60, float %74)  ; FMad(a,b,c)
  %76 = fmul fast float %66, %58
  %77 = call float @dx.op.tertiary.f32(i32 46, float %67, float %59, float %76)  ; FMad(a,b,c)
  %78 = call float @dx.op.tertiary.f32(i32 46, float %68, float %60, float %77)  ; FMad(a,b,c)
  %79 = fmul fast float %70, %58
  %80 = call float @dx.op.tertiary.f32(i32 46, float %71, float %59, float %79)  ; FMad(a,b,c)
  %81 = call float @dx.op.tertiary.f32(i32 46, float %72, float %60, float %80)  ; FMad(a,b,c)
  %82 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %5, i32 0, i32 %9, i32 %10, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %83 = extractvalue %dx.types.ResRet.f32 %82, 0
  %84 = extractvalue %dx.types.ResRet.f32 %82, 1
  %85 = fmul fast float %83, 6.300000e+01
  %86 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %8, i32 17)  ; CBufferLoadLegacy(handle,regIndex)
  %87 = extractvalue %dx.types.CBufRet.f32 %86, 3
  %88 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %8, i32 8)  ; CBufferLoadLegacy(handle,regIndex)
  %89 = extractvalue %dx.types.CBufRet.f32 %88, 0
  %90 = extractvalue %dx.types.CBufRet.f32 %88, 1
  %91 = extractvalue %dx.types.CBufRet.f32 %88, 2
  %92 = extractvalue %dx.types.CBufRet.f32 %88, 3
  %93 = fmul fast float %91, %19
  %94 = fmul fast float %92, %20
  %95 = fadd fast float %93, %89
  %96 = fadd fast float %94, %90
  %97 = call float @dx.op.unary.f32(i32 6, float %87)  ; FAbs(value)
  %98 = fsub fast float 1.000000e+00, %97
  %99 = fmul fast float %98, %23
  %100 = fadd fast float %99, %87
  %101 = fmul fast float %100, %95
  %102 = fmul fast float %100, %96
  %103 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %8, i32 23)  ; CBufferLoadLegacy(handle,regIndex)
  %104 = extractvalue %dx.types.CBufRet.f32 %103, 0
  %105 = extractvalue %dx.types.CBufRet.f32 %103, 1
  %106 = extractvalue %dx.types.CBufRet.f32 %103, 2
  %107 = extractvalue %dx.types.CBufRet.f32 %103, 3
  %108 = fcmp fast oeq float %87, 0.000000e+00
  %109 = fsub fast float -0.000000e+00, %101
  %110 = fsub fast float -0.000000e+00, %102
  %111 = fsub fast float -0.000000e+00, %23
  %112 = call float @dx.op.dot3.f32(i32 55, float %109, float %110, float %111, float %109, float %110, float %111)  ; Dot3(ax,ay,az,bx,by,bz)
  %113 = call float @dx.op.unary.f32(i32 25, float %112)  ; Rsqrt(value)
  %114 = fmul fast float %113, %109
  %115 = fmul fast float %113, %110
  %116 = fmul fast float %113, %111
  %117 = select i1 %108, float %114, float 0.000000e+00
  %118 = select i1 %108, float %115, float 0.000000e+00
  %119 = select i1 %108, float %116, float -1.000000e+00
  %120 = call float @dx.op.dot3.f32(i32 55, float %75, float %78, float %81, float %117, float %118, float %119)  ; Dot3(ax,ay,az,bx,by,bz)
  %121 = call float @dx.op.unary.f32(i32 6, float %120)  ; FAbs(value)
  %122 = fmul fast float %58, 5.000000e-01
  %123 = fmul fast float %59, 5.000000e-01
  %124 = fmul fast float %60, 5.000000e-01
  %125 = fadd fast float %122, 5.000000e-01
  %126 = fadd fast float %123, 5.000000e-01
  %127 = fadd fast float %124, 5.000000e-01
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %2, i32 %9, i32 %10, i32 undef, float %125, float %126, float %127, float %36, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  %128 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %4, i32 0, i32 %9, i32 %10, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %129 = extractvalue %dx.types.ResRet.f32 %128, 0
  %130 = extractvalue %dx.types.ResRet.f32 %128, 1
  %131 = extractvalue %dx.types.ResRet.f32 %128, 2
  %132 = extractvalue %dx.types.ResRet.f32 %128, 3
  %133 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %8, i32 20)  ; CBufferLoadLegacy(handle,regIndex)
  %134 = extractvalue %dx.types.CBufRet.f32 %133, 0
  %135 = fmul fast float %134, 5.000000e-01
  %136 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %8, i32 9)  ; CBufferLoadLegacy(handle,regIndex)
  %137 = extractvalue %dx.types.CBufRet.f32 %136, 0
  %138 = extractvalue %dx.types.CBufRet.f32 %136, 1
  %139 = extractvalue %dx.types.CBufRet.f32 %136, 2
  %140 = extractvalue %dx.types.CBufRet.f32 %136, 3
  %141 = call float @dx.op.unary.f32(i32 6, float %23)  ; FAbs(value)
  %142 = fmul fast float %141, %138
  %143 = fadd fast float %142, %137
  %144 = call float @dx.op.unary.f32(i32 21, float %140)  ; Exp(value)
  %145 = call float @dx.op.unary.f32(i32 7, float %144)  ; Saturate(value)
  %146 = fadd fast float %139, -1.000000e+00
  %147 = fmul fast float %145, %146
  %148 = fadd fast float %147, 1.000000e+00
  %149 = fmul fast float %143, %132
  %150 = fmul fast float %149, %148
  %151 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %8, i32 17)  ; CBufferLoadLegacy(handle,regIndex)
  %152 = extractvalue %dx.types.CBufRet.f32 %151, 3
  %153 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %8, i32 21)  ; CBufferLoadLegacy(handle,regIndex)
  %154 = extractvalue %dx.types.CBufRet.f32 %153, 2
  %155 = call float @dx.op.unary.f32(i32 6, float %152)  ; FAbs(value)
  %156 = fsub fast float 1.000000e+00, %23
  %157 = fmul fast float %155, %156
  %158 = fadd fast float %157, %23
  %159 = fmul fast float %158, %154
  %160 = fdiv fast float %150, %159
  %161 = call float @dx.op.unary.f32(i32 7, float %160)  ; Saturate(value)
  %162 = fsub fast float 1.000000e+00, %161
  %163 = fmul fast float %162, %84
  %164 = fadd fast float %163, %161
  %165 = extractvalue %dx.types.CBufRet.f32 %153, 1
  %166 = fmul fast float %165, 0x3FE5555560000000
  %167 = fadd fast float %166, 0x3EB0C6F7A0000000
  %168 = fmul fast float %165, 0x3FF5555560000000
  %169 = fadd fast float %168, 0x3EC0C6F7A0000000
  %170 = fsub fast float %85, %167
  %171 = fsub fast float %169, %167
  %172 = fdiv fast float %170, %171
  %173 = call float @dx.op.unary.f32(i32 7, float %172)  ; Saturate(value)
  %174 = fsub fast float 1.000000e+00, %173
  %175 = fsub fast float 1.000000e+00, %121
  %176 = call float @dx.op.unary.f32(i32 7, float %175)  ; Saturate(value)
  %177 = call float @dx.op.unary.f32(i32 23, float %176)  ; Log(value)
  %178 = fmul fast float %177, 5.000000e+00
  %179 = call float @dx.op.unary.f32(i32 21, float %178)  ; Exp(value)
  %180 = fsub fast float 1.000000e+00, %179
  %181 = fmul fast float %180, %174
  %182 = fsub fast float 1.000000e+00, %181
  %183 = fmul fast float %182, %85
  %184 = fadd fast float %183, 1.000000e+00
  %185 = fdiv fast float 1.000000e+00, %184
  %186 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %8, i32 19)  ; CBufferLoadLegacy(handle,regIndex)
  %187 = extractvalue %dx.types.CBufRet.f32 %186, 0
  %188 = fmul fast float %181, 2.000000e+00
  %189 = fadd fast float %188, 1.000000e+00
  %190 = fmul fast float %164, 0x3FD5555560000000
  %191 = fmul fast float %190, %187
  %192 = fmul fast float %191, %189
  %193 = fadd fast float %192, 1.000000e+00
  %194 = fcmp fast une float %187, 0.000000e+00
  %195 = uitofp i1 %194 to float
  %196 = fmul fast float %195, 2.000000e+00
  %197 = fmul fast float %196, %193
  %198 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %8, i32 18)  ; CBufferLoadLegacy(handle,regIndex)
  %199 = extractvalue %dx.types.CBufRet.f32 %198, 2
  %200 = fmul fast float %185, 7.500000e-01
  %201 = fsub fast float 1.000000e+00, %200
  %202 = fmul fast float %199, %159
  %203 = fdiv fast float %201, %202
  %204 = call float @dx.op.dot3.f32(i32 55, float %75, float %78, float %81, float %101, float %102, float %23)  ; Dot3(ax,ay,az,bx,by,bz)
  %205 = call float @dx.op.unary.f32(i32 7, float %135)  ; Saturate(value)
  %206 = fsub fast float 1.000000e+00, %205
  %207 = fmul fast float %206, %185
  %208 = fadd fast float %207, %205
  %209 = fmul fast float %208, 0x3FF3FC1760000000
  %210 = call float @dx.op.binary.f32(i32 35, float %209, float 0x3F80101020000000)  ; FMax(a,b)
  %211 = call float @dx.op.binary.f32(i32 36, float %185, float 1.000000e+00)  ; FMin(a,b)
  %212 = fmul fast float %211, 0x3FEFFFFDE0000000
  %213 = fadd fast float %212, 0x3EB0C6F7A0000000
  %214 = fdiv fast float 1.000000e+00, %213
  %215 = fmul fast float %104, 0x3FEBB67AE0000000
  %216 = fmul fast float %106, 0x3FEBB67AE0000000
  %217 = fmul fast float %105, -5.000000e-01
  %218 = fmul fast float %107, -5.000000e-01
  %219 = fsub fast float %217, %215
  %220 = fsub fast float %218, %216
  %221 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %8, i32 13)  ; CBufferLoadLegacy(handle,regIndex)
  %222 = extractvalue %dx.types.CBufRet.f32 %221, 0
  %223 = extractvalue %dx.types.CBufRet.f32 %221, 1
  %224 = fmul fast float %197, %219
  %225 = fmul fast float %224, %222
  %226 = fmul fast float %197, %220
  %227 = fmul fast float %226, %223
  %228 = fadd fast float %225, %19
  %229 = fadd fast float %227, %20
  %230 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %8, i32 15)  ; CBufferLoadLegacy(handle,regIndex)
  %231 = extractvalue %dx.types.CBufRet.f32 %230, 2
  %232 = extractvalue %dx.types.CBufRet.f32 %230, 3
  %233 = fmul fast float %228, %231
  %234 = fmul fast float %229, %232
  %235 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %3, %dx.types.Handle %7, float %233, float %234, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %236 = extractvalue %dx.types.ResRet.f32 %235, 0
  %237 = fmul fast float %236, 8.000000e+00
  %238 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %4, %dx.types.Handle %7, float %233, float %234, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %239 = extractvalue %dx.types.ResRet.f32 %238, 0
  %240 = extractvalue %dx.types.ResRet.f32 %238, 1
  %241 = extractvalue %dx.types.ResRet.f32 %238, 2
  %242 = extractvalue %dx.types.ResRet.f32 %238, 3
  %243 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %8, i32 8)  ; CBufferLoadLegacy(handle,regIndex)
  %244 = extractvalue %dx.types.CBufRet.f32 %243, 0
  %245 = extractvalue %dx.types.CBufRet.f32 %243, 1
  %246 = extractvalue %dx.types.CBufRet.f32 %243, 2
  %247 = extractvalue %dx.types.CBufRet.f32 %243, 3
  %248 = fmul fast float %246, %228
  %249 = fmul fast float %247, %229
  %250 = fadd fast float %248, %244
  %251 = fadd fast float %249, %245
  %252 = fsub fast float 1.000000e+00, %155
  %253 = fmul fast float %252, %237
  %254 = fadd fast float %253, %152
  %255 = fmul fast float %254, %250
  %256 = fmul fast float %254, %251
  %257 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %8, i32 16)  ; CBufferLoadLegacy(handle,regIndex)
  %258 = extractvalue %dx.types.CBufRet.f32 %257, 0
  %259 = extractvalue %dx.types.CBufRet.f32 %257, 1
  %260 = fadd fast float %258, %233
  %261 = fadd fast float %259, %234
  %262 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %6, %dx.types.Handle %7, float %260, float %261, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %263 = extractvalue %dx.types.ResRet.f32 %262, 0
  %264 = extractvalue %dx.types.ResRet.f32 %262, 1
  %265 = extractvalue %dx.types.ResRet.f32 %262, 3
  %266 = fmul fast float %263, 2.000000e+00
  %267 = fmul fast float %264, 2.000000e+00
  %268 = fadd fast float %266, -1.000000e+00
  %269 = fadd fast float %267, -1.000000e+00
  %270 = call float @dx.op.unary.f32(i32 6, float %268)  ; FAbs(value)
  %271 = fsub fast float 1.000000e+00, %270
  %272 = call float @dx.op.unary.f32(i32 6, float %269)  ; FAbs(value)
  %273 = fsub fast float %271, %272
  %274 = fsub fast float -0.000000e+00, %273
  %275 = call float @dx.op.unary.f32(i32 7, float %274)  ; Saturate(value)
  %276 = fcmp fast olt float %268, 0.000000e+00
  %277 = fcmp fast olt float %269, 0.000000e+00
  %278 = select i1 %276, float -1.000000e+00, float 1.000000e+00
  %279 = select i1 %277, float -1.000000e+00, float 1.000000e+00
  %280 = fmul fast float %278, %275
  %281 = fmul fast float %279, %275
  %282 = fsub fast float %268, %280
  %283 = fsub fast float %269, %281
  %284 = call float @dx.op.dot3.f32(i32 55, float %282, float %283, float %273, float %282, float %283, float %273)  ; Dot3(ax,ay,az,bx,by,bz)
  %285 = call float @dx.op.unary.f32(i32 25, float %284)  ; Rsqrt(value)
  %286 = fmul fast float %282, %285
  %287 = fmul fast float %283, %285
  %288 = fmul fast float %285, %273
  %289 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %8, i32 22)  ; CBufferLoadLegacy(handle,regIndex)
  %290 = extractvalue %dx.types.CBufRet.i32 %289, 1
  %291 = icmp eq i32 %290, 0
  %292 = fcmp fast oeq float %37, %265
  %293 = uitofp i1 %292 to float
  %294 = fmul fast float %293, 0x3FE08A0BC0000000
  %295 = select i1 %291, float 0x3FE08A0BC0000000, float %294
  %296 = call float @dx.op.dot3.f32(i32 55, float %75, float %78, float %81, float %255, float %256, float %237)  ; Dot3(ax,ay,az,bx,by,bz)
  %297 = call float @dx.op.dot3.f32(i32 55, float %58, float %59, float %60, float %286, float %287, float %288)  ; Dot3(ax,ay,az,bx,by,bz)
  %298 = call float @dx.op.unary.f32(i32 7, float %297)  ; Saturate(value)
  %299 = fsub fast float 1.000000e+00, %298
  %300 = call float @dx.op.unary.f32(i32 7, float %299)  ; Saturate(value)
  %301 = call float @dx.op.unary.f32(i32 24, float %300)  ; Sqrt(value)
  %302 = fdiv fast float 0x3FF6A09E60000000, %210
  %303 = fmul fast float %302, %301
  %304 = fsub fast float %296, %204
  %305 = fmul fast float %304, %203
  %306 = call float @dx.op.unary.f32(i32 6, float %305)  ; FAbs(value)
  %307 = call float @dx.op.unary.f32(i32 6, float %303)  ; FAbs(value)
  %308 = fadd fast float %306, 0xBFEFF7CEE0000000
  %309 = fadd fast float %307, 0xBFEFF7CEE0000000
  %310 = fmul fast float %308, 0xBFF0083560000000
  %311 = fmul fast float %309, 0xBFF0083560000000
  %312 = call float @dx.op.unary.f32(i32 7, float %310)  ; Saturate(value)
  %313 = call float @dx.op.unary.f32(i32 7, float %311)  ; Saturate(value)
  %314 = fmul fast float %312, 2.000000e+00
  %315 = fmul fast float %313, 2.000000e+00
  %316 = fsub fast float 3.000000e+00, %314
  %317 = fsub fast float 3.000000e+00, %315
  %318 = fsub fast float %242, %132
  %319 = fmul fast float %318, %214
  %320 = call float @dx.op.unary.f32(i32 6, float %319)  ; FAbs(value)
  %321 = fmul fast float %320, %320
  %322 = fmul fast float %321, 9.000000e+00
  %323 = fmul fast float %320, 3.000000e+00
  %324 = fadd fast float %323, 1.000000e+00
  %325 = fadd fast float %324, %322
  %326 = fdiv fast float 0x3FEE666660000000, %325
  %327 = fadd fast float %326, 0x3FA99999A0000000
  %328 = fmul float %312, %313
  %329 = fmul float %328, %328
  %330 = fmul fast float %316, %295
  %331 = fmul fast float %330, %317
  %332 = fmul fast float %331, %329
  %333 = fmul fast float %332, %327
  %334 = call float @dx.op.unary.f32(i32 7, float %228)  ; Saturate(value)
  %335 = call float @dx.op.unary.f32(i32 7, float %229)  ; Saturate(value)
  %336 = fcmp fast oeq float %334, %228
  %337 = fcmp fast oeq float %335, %229
  %338 = and i1 %336, %337
  %339 = select i1 %338, float %333, float 0.000000e+00
  %340 = fcmp fast une float %339, 0.000000e+00
  %341 = select i1 %340, float %239, float 0.000000e+00
  %342 = select i1 %340, float %240, float 0.000000e+00
  %343 = select i1 %340, float %241, float 0.000000e+00
  %344 = select i1 %340, float %242, float 0.000000e+00
  %345 = fadd fast float %339, 1.000000e+00
  %346 = fmul fast float %341, %339
  %347 = fmul fast float %342, %339
  %348 = fmul fast float %343, %339
  %349 = fmul fast float %344, %339
  %350 = fadd fast float %346, %129
  %351 = fadd fast float %347, %130
  %352 = fadd fast float %348, %131
  %353 = fadd fast float %349, %132
  %354 = fmul fast float %197, %105
  %355 = fmul fast float %354, %222
  %356 = fmul fast float %197, %107
  %357 = fmul fast float %356, %223
  %358 = fadd fast float %355, %19
  %359 = fadd fast float %357, %20
  %360 = fmul fast float %358, %231
  %361 = fmul fast float %359, %232
  %362 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %3, %dx.types.Handle %7, float %360, float %361, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %363 = extractvalue %dx.types.ResRet.f32 %362, 0
  %364 = fmul fast float %363, 8.000000e+00
  %365 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %4, %dx.types.Handle %7, float %360, float %361, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %366 = extractvalue %dx.types.ResRet.f32 %365, 0
  %367 = extractvalue %dx.types.ResRet.f32 %365, 1
  %368 = extractvalue %dx.types.ResRet.f32 %365, 2
  %369 = extractvalue %dx.types.ResRet.f32 %365, 3
  %370 = fmul fast float %246, %358
  %371 = fmul fast float %247, %359
  %372 = fadd fast float %370, %244
  %373 = fadd fast float %371, %245
  %374 = fmul fast float %252, %364
  %375 = fadd fast float %374, %152
  %376 = fmul fast float %375, %372
  %377 = fmul fast float %375, %373
  %378 = fadd fast float %258, %360
  %379 = fadd fast float %259, %361
  %380 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %6, %dx.types.Handle %7, float %378, float %379, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %381 = extractvalue %dx.types.ResRet.f32 %380, 0
  %382 = extractvalue %dx.types.ResRet.f32 %380, 1
  %383 = extractvalue %dx.types.ResRet.f32 %380, 3
  %384 = fmul fast float %381, 2.000000e+00
  %385 = fmul fast float %382, 2.000000e+00
  %386 = fadd fast float %384, -1.000000e+00
  %387 = fadd fast float %385, -1.000000e+00
  %388 = call float @dx.op.unary.f32(i32 6, float %386)  ; FAbs(value)
  %389 = fsub fast float 1.000000e+00, %388
  %390 = call float @dx.op.unary.f32(i32 6, float %387)  ; FAbs(value)
  %391 = fsub fast float %389, %390
  %392 = fsub fast float -0.000000e+00, %391
  %393 = call float @dx.op.unary.f32(i32 7, float %392)  ; Saturate(value)
  %394 = fcmp fast olt float %386, 0.000000e+00
  %395 = fcmp fast olt float %387, 0.000000e+00
  %396 = select i1 %394, float -1.000000e+00, float 1.000000e+00
  %397 = select i1 %395, float -1.000000e+00, float 1.000000e+00
  %398 = fmul fast float %396, %393
  %399 = fmul fast float %397, %393
  %400 = fsub fast float %386, %398
  %401 = fsub fast float %387, %399
  %402 = call float @dx.op.dot3.f32(i32 55, float %400, float %401, float %391, float %400, float %401, float %391)  ; Dot3(ax,ay,az,bx,by,bz)
  %403 = call float @dx.op.unary.f32(i32 25, float %402)  ; Rsqrt(value)
  %404 = fmul fast float %400, %403
  %405 = fmul fast float %401, %403
  %406 = fmul fast float %403, %391
  %407 = fcmp fast oeq float %37, %383
  %408 = uitofp i1 %407 to float
  %409 = fmul fast float %408, 0x3FE08A0BC0000000
  %410 = select i1 %291, float 0x3FE08A0BC0000000, float %409
  %411 = call float @dx.op.dot3.f32(i32 55, float %75, float %78, float %81, float %376, float %377, float %364)  ; Dot3(ax,ay,az,bx,by,bz)
  %412 = call float @dx.op.dot3.f32(i32 55, float %58, float %59, float %60, float %404, float %405, float %406)  ; Dot3(ax,ay,az,bx,by,bz)
  %413 = call float @dx.op.unary.f32(i32 7, float %412)  ; Saturate(value)
  %414 = fsub fast float 1.000000e+00, %413
  %415 = call float @dx.op.unary.f32(i32 7, float %414)  ; Saturate(value)
  %416 = call float @dx.op.unary.f32(i32 24, float %415)  ; Sqrt(value)
  %417 = fmul fast float %302, %416
  %418 = fsub fast float %411, %204
  %419 = fmul fast float %418, %203
  %420 = call float @dx.op.unary.f32(i32 6, float %419)  ; FAbs(value)
  %421 = call float @dx.op.unary.f32(i32 6, float %417)  ; FAbs(value)
  %422 = fadd fast float %420, 0xBFEFF7CEE0000000
  %423 = fadd fast float %421, 0xBFEFF7CEE0000000
  %424 = fmul fast float %422, 0xBFF0083560000000
  %425 = fmul fast float %423, 0xBFF0083560000000
  %426 = call float @dx.op.unary.f32(i32 7, float %424)  ; Saturate(value)
  %427 = call float @dx.op.unary.f32(i32 7, float %425)  ; Saturate(value)
  %428 = fmul fast float %426, 2.000000e+00
  %429 = fmul fast float %427, 2.000000e+00
  %430 = fsub fast float 3.000000e+00, %428
  %431 = fsub fast float 3.000000e+00, %429
  %432 = fsub fast float %369, %132
  %433 = fmul fast float %432, %214
  %434 = call float @dx.op.unary.f32(i32 6, float %433)  ; FAbs(value)
  %435 = fmul fast float %434, %434
  %436 = fmul fast float %435, 9.000000e+00
  %437 = fmul fast float %434, 3.000000e+00
  %438 = fadd fast float %437, 1.000000e+00
  %439 = fadd fast float %438, %436
  %440 = fdiv fast float 0x3FEE666660000000, %439
  %441 = fadd fast float %440, 0x3FA99999A0000000
  %442 = fmul float %426, %427
  %443 = fmul float %442, %442
  %444 = fmul fast float %430, %410
  %445 = fmul fast float %444, %431
  %446 = fmul fast float %445, %443
  %447 = fmul fast float %446, %441
  %448 = call float @dx.op.unary.f32(i32 7, float %358)  ; Saturate(value)
  %449 = call float @dx.op.unary.f32(i32 7, float %359)  ; Saturate(value)
  %450 = fcmp fast oeq float %448, %358
  %451 = fcmp fast oeq float %449, %359
  %452 = and i1 %450, %451
  %453 = select i1 %452, float %447, float 0.000000e+00
  %454 = fcmp fast une float %453, 0.000000e+00
  %455 = select i1 %454, float %366, float 0.000000e+00
  %456 = select i1 %454, float %367, float 0.000000e+00
  %457 = select i1 %454, float %368, float 0.000000e+00
  %458 = select i1 %454, float %369, float 0.000000e+00
  %459 = fadd fast float %345, %453
  %460 = fmul fast float %455, %453
  %461 = fmul fast float %456, %453
  %462 = fmul fast float %457, %453
  %463 = fmul fast float %458, %453
  %464 = fadd fast float %350, %460
  %465 = fadd fast float %351, %461
  %466 = fadd fast float %352, %462
  %467 = fadd fast float %353, %463
  %468 = fmul fast float %105, 5.000000e-01
  %469 = fmul fast float %107, 5.000000e-01
  %470 = fsub fast float %215, %468
  %471 = fsub fast float %216, %469
  %472 = fmul fast float %197, %470
  %473 = fmul fast float %472, %222
  %474 = fmul fast float %197, %471
  %475 = fmul fast float %474, %223
  %476 = fadd fast float %473, %19
  %477 = fadd fast float %475, %20
  %478 = fmul fast float %476, %231
  %479 = fmul fast float %477, %232
  %480 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %3, %dx.types.Handle %7, float %478, float %479, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %481 = extractvalue %dx.types.ResRet.f32 %480, 0
  %482 = fmul fast float %481, 8.000000e+00
  %483 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %4, %dx.types.Handle %7, float %478, float %479, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %484 = extractvalue %dx.types.ResRet.f32 %483, 0
  %485 = extractvalue %dx.types.ResRet.f32 %483, 1
  %486 = extractvalue %dx.types.ResRet.f32 %483, 2
  %487 = extractvalue %dx.types.ResRet.f32 %483, 3
  %488 = fmul fast float %246, %476
  %489 = fmul fast float %247, %477
  %490 = fadd fast float %488, %244
  %491 = fadd fast float %489, %245
  %492 = fmul fast float %252, %482
  %493 = fadd fast float %492, %152
  %494 = fmul fast float %493, %490
  %495 = fmul fast float %493, %491
  %496 = fadd fast float %258, %478
  %497 = fadd fast float %259, %479
  %498 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %6, %dx.types.Handle %7, float %496, float %497, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %499 = extractvalue %dx.types.ResRet.f32 %498, 0
  %500 = extractvalue %dx.types.ResRet.f32 %498, 1
  %501 = extractvalue %dx.types.ResRet.f32 %498, 3
  %502 = fmul fast float %499, 2.000000e+00
  %503 = fmul fast float %500, 2.000000e+00
  %504 = fadd fast float %502, -1.000000e+00
  %505 = fadd fast float %503, -1.000000e+00
  %506 = call float @dx.op.unary.f32(i32 6, float %504)  ; FAbs(value)
  %507 = fsub fast float 1.000000e+00, %506
  %508 = call float @dx.op.unary.f32(i32 6, float %505)  ; FAbs(value)
  %509 = fsub fast float %507, %508
  %510 = fsub fast float -0.000000e+00, %509
  %511 = call float @dx.op.unary.f32(i32 7, float %510)  ; Saturate(value)
  %512 = fcmp fast olt float %504, 0.000000e+00
  %513 = fcmp fast olt float %505, 0.000000e+00
  %514 = select i1 %512, float -1.000000e+00, float 1.000000e+00
  %515 = select i1 %513, float -1.000000e+00, float 1.000000e+00
  %516 = fmul fast float %514, %511
  %517 = fmul fast float %515, %511
  %518 = fsub fast float %504, %516
  %519 = fsub fast float %505, %517
  %520 = call float @dx.op.dot3.f32(i32 55, float %518, float %519, float %509, float %518, float %519, float %509)  ; Dot3(ax,ay,az,bx,by,bz)
  %521 = call float @dx.op.unary.f32(i32 25, float %520)  ; Rsqrt(value)
  %522 = fmul fast float %518, %521
  %523 = fmul fast float %519, %521
  %524 = fmul fast float %521, %509
  %525 = fcmp fast oeq float %37, %501
  %526 = uitofp i1 %525 to float
  %527 = fmul fast float %526, 0x3FE08A0BC0000000
  %528 = select i1 %291, float 0x3FE08A0BC0000000, float %527
  %529 = call float @dx.op.dot3.f32(i32 55, float %75, float %78, float %81, float %494, float %495, float %482)  ; Dot3(ax,ay,az,bx,by,bz)
  %530 = call float @dx.op.dot3.f32(i32 55, float %58, float %59, float %60, float %522, float %523, float %524)  ; Dot3(ax,ay,az,bx,by,bz)
  %531 = call float @dx.op.unary.f32(i32 7, float %530)  ; Saturate(value)
  %532 = fsub fast float 1.000000e+00, %531
  %533 = call float @dx.op.unary.f32(i32 7, float %532)  ; Saturate(value)
  %534 = call float @dx.op.unary.f32(i32 24, float %533)  ; Sqrt(value)
  %535 = fmul fast float %302, %534
  %536 = fsub fast float %529, %204
  %537 = fmul fast float %536, %203
  %538 = call float @dx.op.unary.f32(i32 6, float %537)  ; FAbs(value)
  %539 = call float @dx.op.unary.f32(i32 6, float %535)  ; FAbs(value)
  %540 = fadd fast float %538, 0xBFEFF7CEE0000000
  %541 = fadd fast float %539, 0xBFEFF7CEE0000000
  %542 = fmul fast float %540, 0xBFF0083560000000
  %543 = fmul fast float %541, 0xBFF0083560000000
  %544 = call float @dx.op.unary.f32(i32 7, float %542)  ; Saturate(value)
  %545 = call float @dx.op.unary.f32(i32 7, float %543)  ; Saturate(value)
  %546 = fmul fast float %544, 2.000000e+00
  %547 = fmul fast float %545, 2.000000e+00
  %548 = fsub fast float 3.000000e+00, %546
  %549 = fsub fast float 3.000000e+00, %547
  %550 = fsub fast float %487, %132
  %551 = fmul fast float %550, %214
  %552 = call float @dx.op.unary.f32(i32 6, float %551)  ; FAbs(value)
  %553 = fmul fast float %552, %552
  %554 = fmul fast float %553, 9.000000e+00
  %555 = fmul fast float %552, 3.000000e+00
  %556 = fadd fast float %555, 1.000000e+00
  %557 = fadd fast float %556, %554
  %558 = fdiv fast float 0x3FEE666660000000, %557
  %559 = fadd fast float %558, 0x3FA99999A0000000
  %560 = fmul float %544, %545
  %561 = fmul float %560, %560
  %562 = fmul fast float %548, %528
  %563 = fmul fast float %562, %549
  %564 = fmul fast float %563, %561
  %565 = fmul fast float %564, %559
  %566 = call float @dx.op.unary.f32(i32 7, float %476)  ; Saturate(value)
  %567 = call float @dx.op.unary.f32(i32 7, float %477)  ; Saturate(value)
  %568 = fcmp fast oeq float %566, %476
  %569 = fcmp fast oeq float %567, %477
  %570 = and i1 %568, %569
  %571 = select i1 %570, float %565, float 0.000000e+00
  %572 = fcmp fast une float %571, 0.000000e+00
  %573 = select i1 %572, float %484, float 0.000000e+00
  %574 = select i1 %572, float %485, float 0.000000e+00
  %575 = select i1 %572, float %486, float 0.000000e+00
  %576 = select i1 %572, float %487, float 0.000000e+00
  %577 = fadd fast float %459, %571
  %578 = fmul fast float %573, %571
  %579 = fmul fast float %574, %571
  %580 = fmul fast float %575, %571
  %581 = fmul fast float %576, %571
  %582 = fadd fast float %464, %578
  %583 = fadd fast float %465, %579
  %584 = fadd fast float %466, %580
  %585 = fadd fast float %467, %581
  %586 = fmul fast float %105, 0xBFD3333340000000
  %587 = fmul fast float %107, 0xBFD3333340000000
  %588 = fmul fast float %586, %197
  %589 = fmul fast float %588, %222
  %590 = fmul fast float %587, %197
  %591 = fmul fast float %590, %223
  %592 = fadd fast float %589, %19
  %593 = fadd fast float %591, %20
  %594 = fmul fast float %592, %231
  %595 = fmul fast float %593, %232
  %596 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %3, %dx.types.Handle %7, float %594, float %595, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %597 = extractvalue %dx.types.ResRet.f32 %596, 0
  %598 = fmul fast float %597, 8.000000e+00
  %599 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %4, %dx.types.Handle %7, float %594, float %595, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %600 = extractvalue %dx.types.ResRet.f32 %599, 0
  %601 = extractvalue %dx.types.ResRet.f32 %599, 1
  %602 = extractvalue %dx.types.ResRet.f32 %599, 2
  %603 = extractvalue %dx.types.ResRet.f32 %599, 3
  %604 = fmul fast float %246, %592
  %605 = fmul fast float %247, %593
  %606 = fadd fast float %604, %244
  %607 = fadd fast float %605, %245
  %608 = fmul fast float %252, %598
  %609 = fadd fast float %608, %152
  %610 = fmul fast float %609, %606
  %611 = fmul fast float %609, %607
  %612 = fadd fast float %258, %594
  %613 = fadd fast float %259, %595
  %614 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %6, %dx.types.Handle %7, float %612, float %613, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %615 = extractvalue %dx.types.ResRet.f32 %614, 0
  %616 = extractvalue %dx.types.ResRet.f32 %614, 1
  %617 = extractvalue %dx.types.ResRet.f32 %614, 3
  %618 = fmul fast float %615, 2.000000e+00
  %619 = fmul fast float %616, 2.000000e+00
  %620 = fadd fast float %618, -1.000000e+00
  %621 = fadd fast float %619, -1.000000e+00
  %622 = call float @dx.op.unary.f32(i32 6, float %620)  ; FAbs(value)
  %623 = fsub fast float 1.000000e+00, %622
  %624 = call float @dx.op.unary.f32(i32 6, float %621)  ; FAbs(value)
  %625 = fsub fast float %623, %624
  %626 = fsub fast float -0.000000e+00, %625
  %627 = call float @dx.op.unary.f32(i32 7, float %626)  ; Saturate(value)
  %628 = fcmp fast olt float %620, 0.000000e+00
  %629 = fcmp fast olt float %621, 0.000000e+00
  %630 = select i1 %628, float -1.000000e+00, float 1.000000e+00
  %631 = select i1 %629, float -1.000000e+00, float 1.000000e+00
  %632 = fmul fast float %630, %627
  %633 = fmul fast float %631, %627
  %634 = fsub fast float %620, %632
  %635 = fsub fast float %621, %633
  %636 = call float @dx.op.dot3.f32(i32 55, float %634, float %635, float %625, float %634, float %635, float %625)  ; Dot3(ax,ay,az,bx,by,bz)
  %637 = call float @dx.op.unary.f32(i32 25, float %636)  ; Rsqrt(value)
  %638 = fmul fast float %634, %637
  %639 = fmul fast float %635, %637
  %640 = fmul fast float %637, %625
  %641 = fcmp fast oeq float %37, %617
  %642 = uitofp i1 %641 to float
  %643 = fmul fast float %642, 0x3FEE2790C0000000
  %644 = select i1 %291, float 0x3FEE2790C0000000, float %643
  %645 = call float @dx.op.dot3.f32(i32 55, float %75, float %78, float %81, float %610, float %611, float %598)  ; Dot3(ax,ay,az,bx,by,bz)
  %646 = call float @dx.op.dot3.f32(i32 55, float %58, float %59, float %60, float %638, float %639, float %640)  ; Dot3(ax,ay,az,bx,by,bz)
  %647 = call float @dx.op.unary.f32(i32 7, float %646)  ; Saturate(value)
  %648 = fsub fast float 1.000000e+00, %647
  %649 = call float @dx.op.unary.f32(i32 7, float %648)  ; Saturate(value)
  %650 = call float @dx.op.unary.f32(i32 24, float %649)  ; Sqrt(value)
  %651 = fmul fast float %302, %650
  %652 = fsub fast float %645, %204
  %653 = fmul fast float %652, %203
  %654 = call float @dx.op.unary.f32(i32 6, float %653)  ; FAbs(value)
  %655 = call float @dx.op.unary.f32(i32 6, float %651)  ; FAbs(value)
  %656 = fadd fast float %654, 0xBFEFF7CEE0000000
  %657 = fadd fast float %655, 0xBFEFF7CEE0000000
  %658 = fmul fast float %656, 0xBFF0083560000000
  %659 = fmul fast float %657, 0xBFF0083560000000
  %660 = call float @dx.op.unary.f32(i32 7, float %658)  ; Saturate(value)
  %661 = call float @dx.op.unary.f32(i32 7, float %659)  ; Saturate(value)
  %662 = fmul fast float %660, 2.000000e+00
  %663 = fmul fast float %661, 2.000000e+00
  %664 = fsub fast float 3.000000e+00, %662
  %665 = fsub fast float 3.000000e+00, %663
  %666 = fsub fast float %603, %132
  %667 = fmul fast float %666, %214
  %668 = call float @dx.op.unary.f32(i32 6, float %667)  ; FAbs(value)
  %669 = fmul fast float %668, %668
  %670 = fmul fast float %669, 9.000000e+00
  %671 = fmul fast float %668, 3.000000e+00
  %672 = fadd fast float %671, 1.000000e+00
  %673 = fadd fast float %672, %670
  %674 = fdiv fast float 0x3FEE666660000000, %673
  %675 = fadd fast float %674, 0x3FA99999A0000000
  %676 = fmul float %660, %661
  %677 = fmul float %676, %676
  %678 = fmul fast float %664, %644
  %679 = fmul fast float %678, %665
  %680 = fmul fast float %679, %677
  %681 = fmul fast float %680, %675
  %682 = call float @dx.op.unary.f32(i32 7, float %592)  ; Saturate(value)
  %683 = call float @dx.op.unary.f32(i32 7, float %593)  ; Saturate(value)
  %684 = fcmp fast oeq float %682, %592
  %685 = fcmp fast oeq float %683, %593
  %686 = and i1 %684, %685
  %687 = select i1 %686, float %681, float 0.000000e+00
  %688 = fcmp fast une float %687, 0.000000e+00
  %689 = select i1 %688, float %600, float 0.000000e+00
  %690 = select i1 %688, float %601, float 0.000000e+00
  %691 = select i1 %688, float %602, float 0.000000e+00
  %692 = select i1 %688, float %603, float 0.000000e+00
  %693 = fadd fast float %577, %687
  %694 = fmul fast float %689, %687
  %695 = fmul fast float %690, %687
  %696 = fmul fast float %691, %687
  %697 = fmul fast float %692, %687
  %698 = fadd fast float %582, %694
  %699 = fadd fast float %583, %695
  %700 = fadd fast float %584, %696
  %701 = fadd fast float %585, %697
  %702 = fmul fast float %104, 0x3FD0A0B020000000
  %703 = fmul fast float %106, 0x3FD0A0B020000000
  %704 = fmul fast float %105, 0x3FC3333340000000
  %705 = fmul fast float %107, 0x3FC3333340000000
  %706 = fadd fast float %702, %704
  %707 = fadd fast float %703, %705
  %708 = fmul fast float %197, %706
  %709 = fmul fast float %708, %222
  %710 = fmul fast float %197, %707
  %711 = fmul fast float %710, %223
  %712 = fadd fast float %709, %19
  %713 = fadd fast float %711, %20
  %714 = fmul fast float %712, %231
  %715 = fmul fast float %713, %232
  %716 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %3, %dx.types.Handle %7, float %714, float %715, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %717 = extractvalue %dx.types.ResRet.f32 %716, 0
  %718 = fmul fast float %717, 8.000000e+00
  %719 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %4, %dx.types.Handle %7, float %714, float %715, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %720 = extractvalue %dx.types.ResRet.f32 %719, 0
  %721 = extractvalue %dx.types.ResRet.f32 %719, 1
  %722 = extractvalue %dx.types.ResRet.f32 %719, 2
  %723 = extractvalue %dx.types.ResRet.f32 %719, 3
  %724 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %8, i32 17)  ; CBufferLoadLegacy(handle,regIndex)
  %725 = extractvalue %dx.types.CBufRet.f32 %724, 3
  %726 = fmul fast float %246, %712
  %727 = fmul fast float %247, %713
  %728 = fadd fast float %726, %244
  %729 = fadd fast float %727, %245
  %730 = call float @dx.op.unary.f32(i32 6, float %725)  ; FAbs(value)
  %731 = fsub fast float 1.000000e+00, %730
  %732 = fmul fast float %731, %718
  %733 = fadd fast float %732, %725
  %734 = fmul fast float %733, %728
  %735 = fmul fast float %733, %729
  %736 = fadd fast float %258, %714
  %737 = fadd fast float %259, %715
  %738 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %6, %dx.types.Handle %7, float %736, float %737, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %739 = extractvalue %dx.types.ResRet.f32 %738, 0
  %740 = extractvalue %dx.types.ResRet.f32 %738, 1
  %741 = extractvalue %dx.types.ResRet.f32 %738, 3
  %742 = fmul fast float %739, 2.000000e+00
  %743 = fmul fast float %740, 2.000000e+00
  %744 = fadd fast float %742, -1.000000e+00
  %745 = fadd fast float %743, -1.000000e+00
  %746 = call float @dx.op.unary.f32(i32 6, float %744)  ; FAbs(value)
  %747 = fsub fast float 1.000000e+00, %746
  %748 = call float @dx.op.unary.f32(i32 6, float %745)  ; FAbs(value)
  %749 = fsub fast float %747, %748
  %750 = fsub fast float -0.000000e+00, %749
  %751 = call float @dx.op.unary.f32(i32 7, float %750)  ; Saturate(value)
  %752 = fcmp fast olt float %744, 0.000000e+00
  %753 = fcmp fast olt float %745, 0.000000e+00
  %754 = select i1 %752, float -1.000000e+00, float 1.000000e+00
  %755 = select i1 %753, float -1.000000e+00, float 1.000000e+00
  %756 = fmul fast float %754, %751
  %757 = fmul fast float %755, %751
  %758 = fsub fast float %744, %756
  %759 = fsub fast float %745, %757
  %760 = call float @dx.op.dot3.f32(i32 55, float %758, float %759, float %749, float %758, float %759, float %749)  ; Dot3(ax,ay,az,bx,by,bz)
  %761 = call float @dx.op.unary.f32(i32 25, float %760)  ; Rsqrt(value)
  %762 = fmul fast float %758, %761
  %763 = fmul fast float %759, %761
  %764 = fmul fast float %761, %749
  %765 = fcmp fast oeq float %37, %741
  %766 = uitofp i1 %765 to float
  %767 = fmul fast float %766, 0x3FEE2790C0000000
  %768 = select i1 %291, float 0x3FEE2790C0000000, float %767
  %769 = call float @dx.op.dot3.f32(i32 55, float %75, float %78, float %81, float %734, float %735, float %718)  ; Dot3(ax,ay,az,bx,by,bz)
  %770 = call float @dx.op.dot3.f32(i32 55, float %58, float %59, float %60, float %762, float %763, float %764)  ; Dot3(ax,ay,az,bx,by,bz)
  %771 = call float @dx.op.unary.f32(i32 7, float %770)  ; Saturate(value)
  %772 = fsub fast float 1.000000e+00, %771
  %773 = call float @dx.op.unary.f32(i32 7, float %772)  ; Saturate(value)
  %774 = call float @dx.op.unary.f32(i32 24, float %773)  ; Sqrt(value)
  %775 = fmul fast float %302, %774
  %776 = fsub fast float %769, %204
  %777 = fmul fast float %776, %203
  %778 = call float @dx.op.unary.f32(i32 6, float %777)  ; FAbs(value)
  %779 = call float @dx.op.unary.f32(i32 6, float %775)  ; FAbs(value)
  %780 = fadd fast float %778, 0xBFEFF7CEE0000000
  %781 = fadd fast float %779, 0xBFEFF7CEE0000000
  %782 = fmul fast float %780, 0xBFF0083560000000
  %783 = fmul fast float %781, 0xBFF0083560000000
  %784 = call float @dx.op.unary.f32(i32 7, float %782)  ; Saturate(value)
  %785 = call float @dx.op.unary.f32(i32 7, float %783)  ; Saturate(value)
  %786 = fmul fast float %784, 2.000000e+00
  %787 = fmul fast float %785, 2.000000e+00
  %788 = fsub fast float 3.000000e+00, %786
  %789 = fsub fast float 3.000000e+00, %787
  %790 = fsub fast float %723, %132
  %791 = fmul fast float %790, %214
  %792 = call float @dx.op.unary.f32(i32 6, float %791)  ; FAbs(value)
  %793 = fmul fast float %792, %792
  %794 = fmul fast float %793, 9.000000e+00
  %795 = fmul fast float %792, 3.000000e+00
  %796 = fadd fast float %795, 1.000000e+00
  %797 = fadd fast float %796, %794
  %798 = fdiv fast float 0x3FEE666660000000, %797
  %799 = fadd fast float %798, 0x3FA99999A0000000
  %800 = fmul float %784, %785
  %801 = fmul float %800, %800
  %802 = fmul fast float %788, %768
  %803 = fmul fast float %802, %789
  %804 = fmul fast float %803, %801
  %805 = fmul fast float %804, %799
  %806 = call float @dx.op.unary.f32(i32 7, float %712)  ; Saturate(value)
  %807 = call float @dx.op.unary.f32(i32 7, float %713)  ; Saturate(value)
  %808 = fcmp fast oeq float %806, %712
  %809 = fcmp fast oeq float %807, %713
  %810 = and i1 %808, %809
  %811 = select i1 %810, float %805, float 0.000000e+00
  %812 = fcmp fast une float %811, 0.000000e+00
  %813 = select i1 %812, float %720, float 0.000000e+00
  %814 = select i1 %812, float %721, float 0.000000e+00
  %815 = select i1 %812, float %722, float 0.000000e+00
  %816 = select i1 %812, float %723, float 0.000000e+00
  %817 = fadd fast float %693, %811
  %818 = fmul fast float %813, %811
  %819 = fmul fast float %814, %811
  %820 = fmul fast float %815, %811
  %821 = fmul fast float %816, %811
  %822 = fadd fast float %698, %818
  %823 = fadd fast float %699, %819
  %824 = fadd fast float %700, %820
  %825 = fadd fast float %701, %821
  %826 = fsub fast float %704, %702
  %827 = fsub fast float %705, %703
  %828 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %8, i32 13)  ; CBufferLoadLegacy(handle,regIndex)
  %829 = extractvalue %dx.types.CBufRet.f32 %828, 0
  %830 = extractvalue %dx.types.CBufRet.f32 %828, 1
  %831 = fmul fast float %197, %826
  %832 = fmul fast float %831, %829
  %833 = fmul fast float %197, %827
  %834 = fmul fast float %833, %830
  %835 = fadd fast float %832, %19
  %836 = fadd fast float %834, %20
  %837 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %8, i32 15)  ; CBufferLoadLegacy(handle,regIndex)
  %838 = extractvalue %dx.types.CBufRet.f32 %837, 2
  %839 = extractvalue %dx.types.CBufRet.f32 %837, 3
  %840 = fmul fast float %835, %838
  %841 = fmul fast float %836, %839
  %842 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %3, %dx.types.Handle %7, float %840, float %841, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %843 = extractvalue %dx.types.ResRet.f32 %842, 0
  %844 = fmul fast float %843, 8.000000e+00
  %845 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %4, %dx.types.Handle %7, float %840, float %841, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %846 = extractvalue %dx.types.ResRet.f32 %845, 0
  %847 = extractvalue %dx.types.ResRet.f32 %845, 1
  %848 = extractvalue %dx.types.ResRet.f32 %845, 2
  %849 = extractvalue %dx.types.ResRet.f32 %845, 3
  %850 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %8, i32 8)  ; CBufferLoadLegacy(handle,regIndex)
  %851 = extractvalue %dx.types.CBufRet.f32 %850, 0
  %852 = extractvalue %dx.types.CBufRet.f32 %850, 1
  %853 = extractvalue %dx.types.CBufRet.f32 %850, 2
  %854 = extractvalue %dx.types.CBufRet.f32 %850, 3
  %855 = fmul fast float %853, %835
  %856 = fmul fast float %854, %836
  %857 = fadd fast float %855, %851
  %858 = fadd fast float %856, %852
  %859 = fmul fast float %731, %844
  %860 = fadd fast float %859, %725
  %861 = fmul fast float %860, %857
  %862 = fmul fast float %860, %858
  %863 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %8, i32 16)  ; CBufferLoadLegacy(handle,regIndex)
  %864 = extractvalue %dx.types.CBufRet.f32 %863, 0
  %865 = extractvalue %dx.types.CBufRet.f32 %863, 1
  %866 = fadd fast float %864, %840
  %867 = fadd fast float %865, %841
  %868 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %6, %dx.types.Handle %7, float %866, float %867, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %869 = extractvalue %dx.types.ResRet.f32 %868, 0
  %870 = extractvalue %dx.types.ResRet.f32 %868, 1
  %871 = extractvalue %dx.types.ResRet.f32 %868, 3
  %872 = fmul fast float %869, 2.000000e+00
  %873 = fmul fast float %870, 2.000000e+00
  %874 = fadd fast float %872, -1.000000e+00
  %875 = fadd fast float %873, -1.000000e+00
  %876 = call float @dx.op.unary.f32(i32 6, float %874)  ; FAbs(value)
  %877 = fsub fast float 1.000000e+00, %876
  %878 = call float @dx.op.unary.f32(i32 6, float %875)  ; FAbs(value)
  %879 = fsub fast float %877, %878
  %880 = fsub fast float -0.000000e+00, %879
  %881 = call float @dx.op.unary.f32(i32 7, float %880)  ; Saturate(value)
  %882 = fcmp fast olt float %874, 0.000000e+00
  %883 = fcmp fast olt float %875, 0.000000e+00
  %884 = select i1 %882, float -1.000000e+00, float 1.000000e+00
  %885 = select i1 %883, float -1.000000e+00, float 1.000000e+00
  %886 = fmul fast float %884, %881
  %887 = fmul fast float %885, %881
  %888 = fsub fast float %874, %886
  %889 = fsub fast float %875, %887
  %890 = call float @dx.op.dot3.f32(i32 55, float %888, float %889, float %879, float %888, float %889, float %879)  ; Dot3(ax,ay,az,bx,by,bz)
  %891 = call float @dx.op.unary.f32(i32 25, float %890)  ; Rsqrt(value)
  %892 = fmul fast float %888, %891
  %893 = fmul fast float %889, %891
  %894 = fmul fast float %891, %879
  %895 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %8, i32 22)  ; CBufferLoadLegacy(handle,regIndex)
  %896 = extractvalue %dx.types.CBufRet.i32 %895, 1
  %897 = icmp eq i32 %896, 0
  %898 = fcmp fast oeq float %37, %871
  %899 = uitofp i1 %898 to float
  %900 = fmul fast float %899, 0x3FEE2790C0000000
  %901 = select i1 %897, float 0x3FEE2790C0000000, float %900
  %902 = call float @dx.op.dot3.f32(i32 55, float %75, float %78, float %81, float %861, float %862, float %844)  ; Dot3(ax,ay,az,bx,by,bz)
  %903 = call float @dx.op.dot3.f32(i32 55, float %58, float %59, float %60, float %892, float %893, float %894)  ; Dot3(ax,ay,az,bx,by,bz)
  %904 = call float @dx.op.unary.f32(i32 7, float %903)  ; Saturate(value)
  %905 = fsub fast float 1.000000e+00, %904
  %906 = call float @dx.op.unary.f32(i32 7, float %905)  ; Saturate(value)
  %907 = call float @dx.op.unary.f32(i32 24, float %906)  ; Sqrt(value)
  %908 = fmul fast float %302, %907
  %909 = fsub fast float %902, %204
  %910 = fmul fast float %909, %203
  %911 = call float @dx.op.unary.f32(i32 6, float %910)  ; FAbs(value)
  %912 = call float @dx.op.unary.f32(i32 6, float %908)  ; FAbs(value)
  %913 = fadd fast float %911, 0xBFEFF7CEE0000000
  %914 = fadd fast float %912, 0xBFEFF7CEE0000000
  %915 = fmul fast float %913, 0xBFF0083560000000
  %916 = fmul fast float %914, 0xBFF0083560000000
  %917 = call float @dx.op.unary.f32(i32 7, float %915)  ; Saturate(value)
  %918 = call float @dx.op.unary.f32(i32 7, float %916)  ; Saturate(value)
  %919 = fmul fast float %917, 2.000000e+00
  %920 = fmul fast float %918, 2.000000e+00
  %921 = fsub fast float 3.000000e+00, %919
  %922 = fsub fast float 3.000000e+00, %920
  %923 = fsub fast float %849, %132
  %924 = fmul fast float %923, %214
  %925 = call float @dx.op.unary.f32(i32 6, float %924)  ; FAbs(value)
  %926 = fmul fast float %925, %925
  %927 = fmul fast float %926, 9.000000e+00
  %928 = fmul fast float %925, 3.000000e+00
  %929 = fadd fast float %928, 1.000000e+00
  %930 = fadd fast float %929, %927
  %931 = fdiv fast float 0x3FEE666660000000, %930
  %932 = fadd fast float %931, 0x3FA99999A0000000
  %933 = fmul float %917, %918
  %934 = fmul float %933, %933
  %935 = fmul fast float %921, %901
  %936 = fmul fast float %935, %922
  %937 = fmul fast float %936, %934
  %938 = fmul fast float %937, %932
  %939 = call float @dx.op.unary.f32(i32 7, float %835)  ; Saturate(value)
  %940 = call float @dx.op.unary.f32(i32 7, float %836)  ; Saturate(value)
  %941 = fcmp fast oeq float %939, %835
  %942 = fcmp fast oeq float %940, %836
  %943 = and i1 %941, %942
  %944 = select i1 %943, float %938, float 0.000000e+00
  %945 = fcmp fast une float %944, 0.000000e+00
  %946 = select i1 %945, float %846, float 0.000000e+00
  %947 = select i1 %945, float %847, float 0.000000e+00
  %948 = select i1 %945, float %848, float 0.000000e+00
  %949 = select i1 %945, float %849, float 0.000000e+00
  %950 = fadd fast float %817, %944
  %951 = fmul fast float %946, %944
  %952 = fmul fast float %947, %944
  %953 = fmul fast float %948, %944
  %954 = fmul fast float %949, %944
  %955 = fadd fast float %822, %951
  %956 = fadd fast float %823, %952
  %957 = fadd fast float %824, %953
  %958 = fadd fast float %825, %954
  %959 = call float @dx.op.binary.f32(i32 35, float %950, float 0x3CD203AFA0000000)  ; FMax(a,b)
  %960 = fdiv fast float 1.000000e+00, %959
  %961 = fmul fast float %955, %960
  %962 = fmul fast float %956, %960
  %963 = fmul fast float %957, %960
  %964 = fmul fast float %958, %960
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %1, i32 %9, i32 %10, i32 undef, float %961, float %962, float %963, float %964, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  br label %965

; <label>:965                                     ; preds = %28, %27
  ret void
}

; Function Attrs: nounwind readnone
declare i32 @dx.op.threadId.i32(i32, i32) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32) #1

; Function Attrs: nounwind
declare void @dx.op.textureStore.f32(i32, %dx.types.Handle, i32, i32, i32, float, float, float, float, i8) #2

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #1

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #1

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #1

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind readonly }
attributes #2 = { nounwind }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.entryPoints = !{!18}

!0 = !{!"clang version 3.7 (tags/RELEASE_370/final)"}
!1 = !{i32 1, i32 3}
!2 = !{i32 1, i32 6}
!3 = !{!"cs", i32 6, i32 3}
!4 = !{!5, !11, !14, !16}
!5 = !{!6, !8, !9, !10}
!6 = !{i32 0, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 0, i32 1, i32 2, i32 0, !7}
!7 = !{i32 0, i32 9}
!8 = !{i32 1, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 1, i32 1, i32 2, i32 0, !7}
!9 = !{i32 2, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 2, i32 1, i32 2, i32 0, !7}
!10 = !{i32 3, %"class.Texture2D<float>"* undef, !"", i32 0, i32 3, i32 1, i32 2, i32 0, !7}
!11 = !{!12, !13}
!12 = !{i32 0, %"class.RWTexture2D<vector<float, 4> >"* undef, !"", i32 0, i32 0, i32 1, i32 2, i1 false, i1 false, i1 false, !7}
!13 = !{i32 1, %"class.RWTexture2D<vector<float, 4> >"* undef, !"", i32 0, i32 1, i32 1, i32 2, i1 false, i1 false, i1 false, !7}
!14 = !{!15}
!15 = !{i32 0, %globalConstants* undef, !"", i32 0, i32 0, i32 1, i32 384, null}
!16 = !{!17}
!17 = !{i32 0, %struct.SamplerState* undef, !"", i32 0, i32 0, i32 1, i32 0, null}
!18 = !{void ()* @main, !"main", null, !4, !19}
!19 = !{i32 0, i64 8388864, i32 4, !20}
!20 = !{i32 8, i32 8, i32 1}
!21 = distinct !{!21, !"dx.controlflow.hints", i32 1}

#endif

const unsigned char g_REBLUR_Perf_DiffuseDirectionalOcclusion_PostBlur_cs_dxil[] = {
  0x44, 0x58, 0x42, 0x43, 0x21, 0x1a, 0xce, 0x77, 0x24, 0x7e, 0x4f, 0xfc,
  0x1b, 0xe0, 0xb8, 0x5c, 0xd7, 0x3b, 0xfa, 0x4d, 0x01, 0x00, 0x00, 0x00,
  0xc8, 0x30, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00,
  0x4c, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x00,
  0x7c, 0x01, 0x00, 0x00, 0x64, 0x10, 0x00, 0x00, 0x80, 0x10, 0x00, 0x00,
  0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x4f, 0x53, 0x47, 0x31,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x50, 0x53, 0x56, 0x30, 0x08, 0x01, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x53, 0x54, 0x41, 0x54,
  0xe0, 0x0e, 0x00, 0x00, 0x63, 0x00, 0x05, 0x00, 0xb8, 0x03, 0x00, 0x00,
  0x44, 0x58, 0x49, 0x4c, 0x03, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0xc8, 0x0e, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00,
  0xaf, 0x03, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49,
  0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19,
  0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42,
  0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88,
  0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42,
  0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c,
  0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07,
  0x40, 0x02, 0xa8, 0x0d, 0x86, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20,
  0x01, 0xd5, 0x06, 0x62, 0xf8, 0xff, 0xff, 0xff, 0xff, 0x01, 0x90, 0x00,
  0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42,
  0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00,
  0x96, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04,
  0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14,
  0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c, 0x10, 0xd8, 0xc1, 0x08,
  0x40, 0x09, 0x00, 0x0a, 0xe6, 0x08, 0xc0, 0xa0, 0x0c, 0xc3, 0x30, 0x10,
  0x31, 0x03, 0x70, 0xd3, 0x70, 0xf9, 0x13, 0xf6, 0x10, 0x92, 0xbf, 0x12,
  0xd2, 0x4a, 0x4c, 0x7e, 0x71, 0xdb, 0xa8, 0x30, 0x0c, 0xc3, 0x18, 0xe6,
  0x08, 0x10, 0x42, 0xee, 0x19, 0x2e, 0x7f, 0xc2, 0x1e, 0x42, 0xf2, 0x43,
  0xa0, 0x19, 0x16, 0x02, 0x05, 0x49, 0x51, 0x8e, 0x41, 0x19, 0x86, 0x61,
  0x18, 0x86, 0x81, 0x96, 0xb2, 0x00, 0x83, 0x32, 0x0c, 0x83, 0x61, 0x18,
  0x06, 0x42, 0x4d, 0x19, 0x8c, 0xc1, 0xa0, 0xa7, 0x20, 0xc6, 0x60, 0x18,
  0x86, 0x61, 0x18, 0x14, 0x95, 0xc2, 0x18, 0x0c, 0xc3, 0xa0, 0xa9, 0x30,
  0xc7, 0xa0, 0x28, 0x86, 0x61, 0x18, 0xc3, 0x30, 0x18, 0x54, 0x15, 0xc2,
  0x18, 0x0c, 0x83, 0xae, 0xa3, 0x86, 0xcb, 0x9f, 0xb0, 0x87, 0x90, 0x7c,
  0x6e, 0xa3, 0x8a, 0x95, 0x98, 0xfc, 0xe2, 0xb6, 0x11, 0x61, 0x18, 0x86,
  0x51, 0x88, 0x6c, 0x50, 0x06, 0xd2, 0x8e, 0x1a, 0x2e, 0x7f, 0xc2, 0x1e,
  0x42, 0xf2, 0xb9, 0x8d, 0x2a, 0x56, 0x62, 0xf2, 0x91, 0xdb, 0x46, 0xc4,
  0x30, 0x0c, 0x43, 0x21, 0xb8, 0x41, 0x19, 0xa8, 0x9b, 0x23, 0x08, 0x8a,
  0xa1, 0x0c, 0xc8, 0x30, 0x7c, 0x04, 0x0e, 0x04, 0x0c, 0x23, 0x10, 0xc6,
  0x4c, 0x6d, 0x30, 0x0e, 0xec, 0x10, 0x0e, 0xf3, 0x30, 0x0f, 0x6e, 0x40,
  0x0b, 0xe5, 0x80, 0x0f, 0xf4, 0x50, 0x0f, 0xf2, 0x50, 0x0e, 0x72, 0x40,
  0x0a, 0x7c, 0x60, 0x0f, 0xe5, 0x30, 0x0e, 0xf4, 0xf0, 0x0e, 0xf2, 0xc0,
  0x07, 0xe6, 0xc0, 0x0e, 0xef, 0x10, 0x0e, 0xf4, 0xc0, 0x06, 0x60, 0x40,
  0x07, 0x7e, 0x00, 0x06, 0x7e, 0xa0, 0x07, 0x7a, 0xd0, 0x0e, 0xe9, 0x00,
  0x0f, 0xf3, 0xf0, 0x0b, 0xf4, 0x90, 0x0f, 0xf0, 0x50, 0x0e, 0x28, 0x18,
  0x66, 0x12, 0x83, 0x71, 0x60, 0x87, 0x70, 0x98, 0x87, 0x79, 0x70, 0x03,
  0x5a, 0x28, 0x07, 0x7c, 0xa0, 0x87, 0x7a, 0x90, 0x87, 0x72, 0x90, 0x03,
  0x52, 0xe0, 0x03, 0x7b, 0x28, 0x87, 0x71, 0xa0, 0x87, 0x77, 0x90, 0x07,
  0x3e, 0x30, 0x07, 0x76, 0x78, 0x87, 0x70, 0xa0, 0x07, 0x36, 0x00, 0x03,
  0x3a, 0xf0, 0x03, 0x30, 0xf0, 0x03, 0x24, 0x8c, 0x24, 0x95, 0x33, 0x85,
  0xc1, 0x38, 0xb0, 0x43, 0x38, 0xcc, 0xc3, 0x3c, 0xb8, 0x01, 0x2d, 0x94,
  0x03, 0x3e, 0xd0, 0x43, 0x3d, 0xc8, 0x43, 0x39, 0xc8, 0x01, 0x29, 0xf0,
  0x81, 0x39, 0xb0, 0xc3, 0x3b, 0x84, 0x03, 0x3d, 0xf8, 0x81, 0x1e, 0xe8,
  0x41, 0x3b, 0xa4, 0x03, 0x3c, 0xcc, 0xc3, 0x2f, 0xd0, 0x43, 0x3e, 0xc0,
  0x43, 0x39, 0xa0, 0x60, 0x98, 0xc9, 0x1a, 0x07, 0x76, 0x08, 0x87, 0x79,
  0x98, 0x07, 0x37, 0xa0, 0x85, 0x72, 0xc0, 0x07, 0x7a, 0xa8, 0x07, 0x79,
  0x28, 0x07, 0x39, 0x20, 0x05, 0x3e, 0x30, 0x07, 0x76, 0x78, 0x87, 0x70,
  0xa0, 0x07, 0x3f, 0x40, 0x82, 0x71, 0x12, 0x3a, 0x13, 0x19, 0x8c, 0x03,
  0x3b, 0x84, 0xc3, 0x3c, 0xcc, 0x83, 0x1b, 0xc8, 0xc2, 0x2d, 0xd0, 0x42,
  0x39, 0xe0, 0x03, 0x3d, 0xd4, 0x83, 0x3c, 0x94, 0x83, 0x1c, 0x90, 0x02,
  0x1f, 0xd8, 0x43, 0x39, 0x8c, 0x03, 0x3d, 0xbc, 0x83, 0x3c, 0xf0, 0x81,
  0x39, 0xb0, 0xc3, 0x3b, 0x84, 0x03, 0x3d, 0xb0, 0x01, 0x18, 0xd0, 0x81,
  0x1f, 0x80, 0x81, 0x1f, 0xa0, 0x60, 0x24, 0x35, 0x09, 0xc6, 0xb3, 0x84,
  0x05, 0x90, 0x24, 0x9f, 0x01, 0xa6, 0x08, 0xb9, 0xfc, 0x62, 0x71, 0x80,
  0xc9, 0xc7, 0x7d, 0x1c, 0x05, 0xec, 0x30, 0xc2, 0x60, 0x0c, 0x23, 0x08,
  0xc6, 0x30, 0x82, 0x30, 0xdc, 0x63, 0x2c, 0x4e, 0x00, 0x2c, 0x9c, 0xd3,
  0x48, 0x13, 0xd0, 0x4c, 0x12, 0x42, 0x83, 0xb6, 0x1d, 0xc7, 0x71, 0x74,
  0x8d, 0xf7, 0x7d, 0xdf, 0xf7, 0x7d, 0x5f, 0xd8, 0x30, 0x0c, 0xc3, 0x30,
  0x0c, 0xc3, 0x30, 0x0c, 0xc3, 0x30, 0x0c, 0xc3, 0x18, 0x86, 0x61, 0x18,
  0x46, 0x8a, 0x6f, 0x92, 0xa6, 0x88, 0x12, 0x26, 0x9f, 0x05, 0x98, 0x67,
  0x21, 0x22, 0x76, 0x02, 0x26, 0x02, 0x05, 0x03, 0xcd, 0x73, 0x04, 0xa0,
  0x00, 0x00, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87,
  0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0, 0x87, 0x0d, 0xae, 0x50,
  0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x30,
  0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0xa0,
  0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78, 0xa0, 0x07, 0x78, 0xd0,
  0x06, 0xe9, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x71, 0x60, 0x07, 0x6d, 0x90,
  0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x60,
  0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0x60, 0x0e, 0x71, 0x60,
  0x07, 0x7a, 0x10, 0x07, 0x76, 0xd0, 0x06, 0xe6, 0x30, 0x07, 0x72, 0xa0,
  0x07, 0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60,
  0x07, 0x74, 0xd0, 0x06, 0xee, 0x80, 0x07, 0x7a, 0x10, 0x07, 0x76, 0xa0,
  0x07, 0x73, 0x20, 0x07, 0x7a, 0x60, 0x07, 0x74, 0x30, 0xe4, 0x09, 0x80,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x43,
  0x00, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90,
  0x67, 0x01, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
  0x21, 0x4f, 0x03, 0x04, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x43, 0x9e, 0x07, 0x08, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x86, 0x3c, 0x11, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x0c, 0x79, 0x26, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x54, 0x40, 0x00, 0x08, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0xb9, 0x80, 0x00, 0x08, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0xa3, 0x01, 0x01, 0x20,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0xa7, 0x03, 0x02,
  0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x0f, 0x18,
  0x00, 0x01, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x16,
  0x08, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x1c,
  0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x1a,
  0x4a, 0xa0, 0x0c, 0x46, 0x00, 0x8a, 0xa1, 0x08, 0x4a, 0xa2, 0x00, 0x0d,
  0x0a, 0xa1, 0x1c, 0x0a, 0x30, 0xa0, 0x00, 0x05, 0x0a, 0x54, 0xa0, 0x80,
  0x05, 0x0a, 0x5c, 0xa0, 0x00, 0x07, 0x0a, 0x73, 0xa0, 0x40, 0x07, 0x0a,
  0x76, 0xa0, 0x80, 0x07, 0x0a, 0x7a, 0xa0, 0xc0, 0x07, 0x0a, 0x7e, 0xa0,
  0x00, 0x09, 0x0a, 0x92, 0xa0, 0x40, 0x09, 0x4a, 0xa1, 0x60, 0x09, 0x0a,
  0x97, 0xa0, 0x80, 0x09, 0x0a, 0x99, 0xa0, 0xa0, 0x09, 0x0a, 0x9b, 0xa0,
  0xc0, 0x09, 0x0a, 0x9d, 0xa0, 0xe0, 0x09, 0x0a, 0x9f, 0xa0, 0x00, 0x0b,
  0x0a, 0xb1, 0xa0, 0x20, 0x0b, 0x0a, 0xb3, 0xa0, 0x40, 0x0b, 0x0a, 0xb5,
  0xa0, 0x60, 0x0b, 0x0a, 0xb7, 0xa0, 0x80, 0x0b, 0x0a, 0xb9, 0xa0, 0xa0,
  0x0b, 0x0a, 0xbb, 0xa0, 0xc0, 0x0b, 0x0a, 0xa2, 0x40, 0x17, 0x4a, 0xf2,
  0xa1, 0x48, 0xe8, 0x1b, 0x01, 0xa8, 0x01, 0xaa, 0x0b, 0x90, 0x10, 0x10,
  0x81, 0xd2, 0x19, 0x00, 0x5a, 0x67, 0x00, 0x28, 0x9e, 0x01, 0x20, 0x79,
  0x06, 0x80, 0xe8, 0x19, 0x00, 0x32, 0x67, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0xe6, 0x01, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90,
  0x46, 0x02, 0x13, 0x44, 0x35, 0x18, 0x63, 0x0b, 0x73, 0x3b, 0x03, 0xb1,
  0x2b, 0x93, 0x9b, 0x4b, 0x7b, 0x73, 0x03, 0x99, 0x71, 0xb9, 0x01, 0x41,
  0xa1, 0x0b, 0x3b, 0x9b, 0x7b, 0x91, 0x2a, 0x62, 0x2a, 0x0a, 0x9a, 0x2a,
  0xfa, 0x9a, 0xb9, 0x81, 0x79, 0x31, 0x4b, 0x73, 0x0b, 0x63, 0x4b, 0xd9,
  0x10, 0x04, 0x13, 0x84, 0x81, 0x99, 0x20, 0x0c, 0xcd, 0x06, 0x61, 0x20,
  0x26, 0x08, 0x83, 0xb3, 0x41, 0x30, 0x0c, 0x0a, 0x63, 0x73, 0x13, 0x84,
  0xe1, 0xd9, 0x30, 0x20, 0x09, 0x31, 0x41, 0x30, 0x83, 0x54, 0x20, 0x75,
  0x96, 0xe4, 0xf6, 0xe5, 0xf4, 0x26, 0xd7, 0x16, 0xc6, 0xf6, 0x25, 0xf5,
  0x56, 0x77, 0x86, 0xe6, 0x56, 0x36, 0x37, 0x37, 0x41, 0x18, 0xa0, 0x09,
  0xc2, 0x10, 0x6d, 0x10, 0x0c, 0x67, 0x43, 0x62, 0x2c, 0x8c, 0x61, 0x0c,
  0x8d, 0xf1, 0x30, 0x39, 0x4b, 0x72, 0xfb, 0x22, 0x0a, 0xa3, 0x0b, 0x8b,
  0xd9, 0x90, 0x0c, 0x4b, 0x64, 0x0c, 0x43, 0x63, 0x3c, 0x44, 0xce, 0x92,
  0xdc, 0xbe, 0x88, 0xd2, 0xcc, 0xcc, 0x36, 0x24, 0xcd, 0x32, 0x19, 0xcd,
  0xd0, 0x18, 0xcf, 0x04, 0x21, 0x0d, 0x48, 0x81, 0xc9, 0x59, 0x92, 0xdb,
  0x97, 0x55, 0x5a, 0xd9, 0x9d, 0xd6, 0x86, 0x84, 0xa8, 0x2c, 0x83, 0x18,
  0x1a, 0xe3, 0xd9, 0x40, 0x40, 0x12, 0x75, 0x4d, 0x10, 0xd6, 0xa0, 0x14,
  0x58, 0x9d, 0x3d, 0xd5, 0xd1, 0x7d, 0x39, 0xbd, 0xc9, 0xb5, 0x85, 0xb1,
  0x7d, 0x49, 0xbd, 0xd5, 0x9d, 0xa1, 0xb9, 0x95, 0xcd, 0xcd, 0x4d, 0x10,
  0xbe, 0x50, 0xd8, 0xb0, 0x18, 0x99, 0x66, 0x18, 0x43, 0xb3, 0x6d, 0xdb,
  0xc3, 0xe4, 0xec, 0xa9, 0x8e, 0xee, 0x8b, 0x28, 0xcd, 0xcc, 0x6c, 0xc3,
  0x32, 0x64, 0x9d, 0x31, 0x0c, 0xcd, 0xb6, 0x6d, 0xcf, 0x06, 0x81, 0xf3,
  0x26, 0x08, 0x72, 0x70, 0x0a, 0x7c, 0xce, 0xd8, 0xde, 0xc4, 0xc2, 0xd8,
  0x86, 0xde, 0xdc, 0xe6, 0xe8, 0xc2, 0xdc, 0xe8, 0xe6, 0x26, 0x08, 0x83,
  0xb4, 0x01, 0x31, 0xc0, 0x20, 0x0c, 0x0c, 0x63, 0x10, 0x03, 0x60, 0x43,
  0x30, 0x06, 0x13, 0x04, 0x3a, 0x40, 0x05, 0x36, 0x67, 0x4e, 0x65, 0x61,
  0x72, 0x65, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x6d, 0x70, 0x1b, 0x10, 0xa3,
  0x0c, 0xcc, 0xc0, 0x30, 0x06, 0x03, 0xd8, 0x10, 0x9c, 0xc1, 0x06, 0x02,
  0xfb, 0xc8, 0x00, 0x0d, 0x26, 0x08, 0x71, 0x60, 0x0a, 0x5c, 0xce, 0xac,
  0xd2, 0xca, 0xee, 0xa8, 0xde, 0x86, 0xd8, 0xd2, 0xe0, 0x26, 0x08, 0xc3,
  0xb4, 0x61, 0x60, 0x03, 0x36, 0x68, 0x26, 0x08, 0x03, 0xb5, 0x01, 0x49,
  0xd6, 0xa0, 0x69, 0x03, 0xc2, 0x70, 0x03, 0x87, 0xcc, 0x99, 0x55, 0x5a,
  0xd9, 0x1d, 0xd5, 0xdb, 0xd5, 0x9b, 0x1c, 0x1b, 0xd9, 0x04, 0x61, 0xa8,
  0x26, 0x08, 0x9f, 0x28, 0x6c, 0x50, 0x12, 0x38, 0x68, 0xda, 0x80, 0x88,
  0x03, 0x37, 0x70, 0x1c, 0x39, 0x20, 0x72, 0x66, 0x24, 0x57, 0x37, 0x47,
  0x57, 0xd7, 0x36, 0x41, 0x18, 0xac, 0x0d, 0x48, 0x42, 0x07, 0x44, 0x1d,
  0xb8, 0x81, 0xe3, 0xc8, 0x01, 0x9d, 0x33, 0xa4, 0x34, 0x3a, 0xa2, 0xb4,
  0x39, 0x3a, 0xa8, 0x30, 0xb9, 0xb0, 0xb6, 0xb9, 0x09, 0xc2, 0x70, 0x6d,
  0x40, 0x92, 0x3b, 0x20, 0xf0, 0xc0, 0x0d, 0x1c, 0x47, 0x0e, 0x08, 0x9d,
  0x59, 0xa5, 0x95, 0xdd, 0x59, 0x95, 0x8d, 0xd1, 0xbd, 0xc9, 0x5d, 0xbd,
  0xc9, 0xb1, 0x91, 0x4d, 0x10, 0x06, 0x6c, 0x83, 0x91, 0xe8, 0x01, 0xb1,
  0x07, 0x6e, 0xe0, 0x90, 0x3a, 0xb3, 0x4a, 0x2b, 0xbb, 0xb3, 0x2a, 0x1b,
  0xa3, 0x7b, 0x93, 0xbb, 0x7a, 0x93, 0x63, 0x23, 0x83, 0x92, 0x2b, 0xb3,
  0x9b, 0x20, 0x0c, 0xd9, 0x06, 0x23, 0xe9, 0x03, 0xc2, 0x0f, 0xdc, 0xc0,
  0x21, 0x72, 0xd6, 0x64, 0x37, 0x35, 0x16, 0xc6, 0x56, 0x36, 0x41, 0x18,
  0xb4, 0x0d, 0x46, 0x02, 0x0a, 0x44, 0x28, 0xb8, 0x81, 0x43, 0xe3, 0x8c,
  0xa8, 0x4c, 0xac, 0xee, 0x6c, 0x82, 0x30, 0x6c, 0x1b, 0x8c, 0x64, 0x14,
  0x08, 0x52, 0x70, 0x03, 0x87, 0xce, 0x59, 0x92, 0x9b, 0xdd, 0xd4, 0x98,
  0x5c, 0x59, 0x99, 0xdb, 0x54, 0x9a, 0x5e, 0xd9, 0x04, 0x61, 0xe0, 0x36,
  0x20, 0x89, 0x29, 0x10, 0xa7, 0xe0, 0x06, 0x8e, 0x23, 0x07, 0x5c, 0xce,
  0xa6, 0xc6, 0xe4, 0xca, 0xca, 0xdc, 0xa6, 0xd2, 0xf4, 0xca, 0x26, 0x08,
  0x43, 0xb7, 0xc1, 0x48, 0x52, 0x81, 0x50, 0x05, 0x37, 0x70, 0xc8, 0x9c,
  0x25, 0xb9, 0xd9, 0x49, 0x95, 0x8d, 0xd1, 0x4d, 0xa5, 0xe9, 0x95, 0x4d,
  0x10, 0x06, 0x6f, 0x03, 0x92, 0xb0, 0x02, 0xd1, 0x0a, 0x6e, 0xe0, 0x38,
  0x72, 0xc0, 0xe4, 0x4c, 0xaa, 0x6c, 0x8c, 0x6e, 0x2a, 0x4d, 0xaf, 0x6c,
  0x82, 0x30, 0x7c, 0x1b, 0x8c, 0xe4, 0x15, 0x08, 0x58, 0x70, 0x03, 0x87,
  0xcd, 0x99, 0x54, 0xd9, 0x18, 0xdd, 0x54, 0x9a, 0x5e, 0x19, 0x94, 0x5c,
  0x99, 0xdd, 0x04, 0x61, 0x00, 0x83, 0x0d, 0x46, 0x22, 0x0b, 0xc4, 0x2c,
  0xb8, 0x81, 0x43, 0xe8, 0x4c, 0xaa, 0x6c, 0xee, 0x8d, 0xad, 0x8e, 0x2e,
  0xed, 0xcd, 0x6d, 0x6a, 0x2c, 0x8c, 0xad, 0x6c, 0x82, 0x30, 0x84, 0xc1,
  0x06, 0x24, 0xa9, 0x05, 0xc2, 0x16, 0xdc, 0xc0, 0x71, 0xe4, 0x80, 0xcb,
  0x99, 0x54, 0xd9, 0x18, 0xdd, 0x93, 0x99, 0xd9, 0x5c, 0x19, 0xdd, 0x04,
  0x61, 0x10, 0x83, 0x0d, 0x48, 0x82, 0x0b, 0x44, 0x2e, 0xb8, 0x81, 0xe3,
  0xc8, 0x01, 0xad, 0xb3, 0xa9, 0x32, 0xb7, 0xb9, 0x34, 0xba, 0x34, 0xbb,
  0x34, 0xba, 0x3c, 0xaa, 0x37, 0xa2, 0x30, 0xb9, 0x35, 0xb7, 0xb2, 0xb9,
  0xb9, 0x09, 0xc2, 0x30, 0x06, 0x1b, 0x8c, 0x64, 0x17, 0x08, 0x5e, 0x70,
  0x03, 0x87, 0xcb, 0x99, 0x54, 0xd9, 0x18, 0xdd, 0x93, 0x5c, 0xda, 0x59,
  0x9a, 0xdb, 0x04, 0x61, 0x20, 0x83, 0x09, 0xc2, 0x50, 0x06, 0x1b, 0x90,
  0xc4, 0x17, 0x88, 0x5f, 0x70, 0x03, 0x70, 0x70, 0xe4, 0x80, 0xd9, 0x99,
  0xd3, 0x9b, 0x9b, 0x54, 0x99, 0x59, 0x99, 0x5c, 0x99, 0xdb, 0x58, 0x59,
  0xd0, 0xd8, 0x58, 0x5d, 0x5b, 0x1d, 0x5b, 0x18, 0x5d, 0xda, 0x9b, 0xdb,
  0x04, 0x61, 0x30, 0x83, 0x0d, 0x46, 0x22, 0x0e, 0xc4, 0x38, 0xb8, 0x81,
  0x43, 0xe5, 0xec, 0x49, 0x8e, 0x0e, 0xed, 0xad, 0xe9, 0x8d, 0xac, 0x6c,
  0x82, 0x30, 0x9c, 0xc1, 0x06, 0x24, 0x29, 0x07, 0xc2, 0x1c, 0xdc, 0xc0,
  0x71, 0xe4, 0x80, 0xca, 0x59, 0x95, 0x1b, 0x9c, 0xdc, 0x9b, 0x5a, 0xd9,
  0x18, 0xdd, 0x04, 0x61, 0x40, 0x83, 0x0d, 0x46, 0x82, 0x0e, 0x44, 0x3a,
  0xb8, 0x81, 0xc3, 0xe7, 0x8c, 0xa8, 0xcc, 0xed, 0x2d, 0x6d, 0x2e, 0xcd,
  0xed, 0x4c, 0x2a, 0xcc, 0xed, 0xac, 0x6c, 0x82, 0x30, 0xa4, 0xc1, 0x06,
  0x24, 0x59, 0x07, 0x82, 0x1d, 0xdc, 0xc0, 0x71, 0xe4, 0x80, 0xd5, 0x19,
  0x14, 0x5b, 0x98, 0x5b, 0x19, 0x51, 0xda, 0x1c, 0xdd, 0x54, 0x99, 0xdb,
  0x5c, 0x1a, 0x5d, 0x9a, 0x5d, 0x1a, 0x5d, 0xde, 0x04, 0x61, 0x50, 0x83,
  0x0d, 0x48, 0xe2, 0x0e, 0xc4, 0x3b, 0xb8, 0x81, 0xe3, 0xc8, 0x01, 0x9f,
  0x33, 0x23, 0xb9, 0xb0, 0xb6, 0x32, 0xb9, 0x30, 0xba, 0xb2, 0xa9, 0xb1,
  0x30, 0xb6, 0xb2, 0x09, 0xc2, 0xb0, 0x06, 0x1b, 0x8c, 0x24, 0x1e, 0x08,
  0x79, 0x70, 0x03, 0x87, 0xcb, 0x99, 0x10, 0x5b, 0x9d, 0x9c, 0x54, 0x18,
  0x59, 0x5a, 0xdd, 0xdc, 0x04, 0x61, 0x60, 0x83, 0x0d, 0x48, 0x42, 0x0f,
  0x44, 0x3d, 0xb8, 0x81, 0xe3, 0xc8, 0x01, 0xaf, 0xb3, 0xa6, 0x30, 0xbc,
  0xa0, 0xb1, 0xb1, 0xba, 0xb6, 0x3a, 0xb6, 0x30, 0xba, 0x32, 0x32, 0x23,
  0xb9, 0xb0, 0xb6, 0x32, 0xa7, 0xba, 0xb6, 0x09, 0xc2, 0xd0, 0x06, 0x1b,
  0x8c, 0xe4, 0x1e, 0x08, 0x7c, 0x70, 0x03, 0x87, 0xdb, 0x59, 0x53, 0x18,
  0x9e, 0x51, 0xd8, 0x1c, 0x5d, 0xd0, 0xd8, 0x58, 0x5d, 0x5b, 0x1d, 0x5b,
  0x18, 0x5d, 0x19, 0x99, 0x91, 0x5c, 0x58, 0x5b, 0x99, 0x53, 0x5d, 0xdb,
  0x04, 0x61, 0x70, 0x83, 0x0d, 0x46, 0xa2, 0x0f, 0xc4, 0x3e, 0xb8, 0x81,
  0x43, 0xe6, 0x2c, 0xc8, 0x8d, 0x2e, 0xcd, 0x28, 0x4d, 0xae, 0xcc, 0x8c,
  0x2d, 0x6f, 0x82, 0x30, 0xbc, 0xc1, 0x06, 0x23, 0xe9, 0x07, 0xc2, 0x1f,
  0xdc, 0xc0, 0xa1, 0x74, 0xc6, 0xf4, 0x26, 0x56, 0x16, 0xe4, 0x76, 0xc6,
  0x56, 0x66, 0x24, 0x17, 0x36, 0x46, 0x97, 0xf6, 0xe6, 0x36, 0x41, 0x18,
  0xe0, 0x60, 0x03, 0x92, 0x80, 0x04, 0x11, 0x12, 0x6e, 0xe0, 0x38, 0x72,
  0x40, 0xe9, 0x4c, 0xea, 0xad, 0xee, 0x0c, 0xcd, 0xad, 0x6c, 0x6e, 0xce,
  0x48, 0x2e, 0x6c, 0x8c, 0x2e, 0xed, 0xcd, 0x6d, 0x82, 0x30, 0xc4, 0xc1,
  0x06, 0x23, 0x19, 0x09, 0x82, 0x24, 0xdc, 0xc0, 0x61, 0x1a, 0x9c, 0x49,
  0x95, 0xcd, 0xc1, 0xbd, 0xb9, 0xcd, 0xa5, 0xd9, 0x95, 0x05, 0x8d, 0x8d,
  0xd5, 0xb5, 0xd5, 0xb1, 0x85, 0xd1, 0xa5, 0xbd, 0xb9, 0x49, 0xbd, 0xd5,
  0x9d, 0xa1, 0xb9, 0x95, 0xcd, 0xcd, 0x51, 0xa1, 0xc9, 0x95, 0xcd, 0xa1,
  0xbd, 0xb1, 0x91, 0x4d, 0x10, 0x06, 0x39, 0xd8, 0x60, 0x24, 0x26, 0x41,
  0x9c, 0x84, 0x1b, 0x38, 0xb4, 0xce, 0x88, 0xd2, 0xcc, 0xcc, 0xa0, 0xe4,
  0xca, 0xe0, 0xc2, 0xe6, 0xe6, 0x84, 0xd8, 0xea, 0xe4, 0xa4, 0xc2, 0xc8,
  0xd2, 0xea, 0xe6, 0x26, 0x08, 0xc3, 0x1c, 0x6c, 0x30, 0x92, 0x94, 0x20,
  0x54, 0xc2, 0x0d, 0x1c, 0x5a, 0x67, 0x53, 0x70, 0x65, 0x63, 0x50, 0x72,
  0x65, 0x70, 0x61, 0x73, 0x73, 0x42, 0x6c, 0x75, 0x72, 0x52, 0x61, 0x64,
  0x69, 0x75, 0x73, 0x13, 0x84, 0x81, 0x0e, 0x36, 0x18, 0x09, 0x4b, 0x10,
  0x2d, 0xe1, 0x06, 0x0e, 0xa7, 0x33, 0xa4, 0xb4, 0x39, 0xba, 0x37, 0xb9,
  0x3c, 0xa3, 0x34, 0x3c, 0x23, 0xb9, 0xb0, 0xb6, 0x32, 0xa7, 0xba, 0xb6,
  0x09, 0xc2, 0x50, 0x07, 0x1b, 0x90, 0xe4, 0x25, 0x08, 0x98, 0x70, 0x03,
  0xc7, 0x91, 0x03, 0x5e, 0x67, 0x4d, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x74,
  0x44, 0x69, 0x6d, 0x4d, 0x75, 0x6c, 0x55, 0x6e, 0x70, 0x72, 0x6f, 0x6a,
  0x65, 0x63, 0x74, 0x13, 0x84, 0xc1, 0x0e, 0x36, 0x20, 0x89, 0x4c, 0x10,
  0x33, 0xe1, 0x06, 0x8e, 0x23, 0x07, 0xd4, 0xce, 0x92, 0xe6, 0xae, 0xde,
  0xe4, 0xd8, 0xc8, 0xa6, 0xe0, 0xc2, 0xc6, 0xca, 0x9a, 0xde, 0xe8, 0xd2,
  0xde, 0xdc, 0x8a, 0xdc, 0xc2, 0xc4, 0xd8, 0xca, 0xc8, 0x26, 0x08, 0xc3,
  0x1d, 0x6c, 0x30, 0x92, 0x9a, 0x20, 0x6c, 0xc2, 0x0d, 0xc0, 0x81, 0xcb,
  0x99, 0x91, 0x5c, 0x58, 0x5b, 0x59, 0x92, 0x1b, 0x59, 0x19, 0xde, 0x04,
  0x61, 0xc0, 0x83, 0x0d, 0x46, 0x82, 0x13, 0x44, 0x4e, 0xb8, 0x01, 0x38,
  0x30, 0x3a, 0x23, 0x4a, 0x33, 0x33, 0x6b, 0x0a, 0xa3, 0x2b, 0x93, 0x4b,
  0x0b, 0x63, 0x6b, 0x0a, 0x9b, 0x5b, 0x9b, 0x20, 0x0c, 0x79, 0xb0, 0x01,
  0x49, 0x76, 0x82, 0xe0, 0x09, 0x37, 0x00, 0x07, 0x47, 0x0e, 0x18, 0x9d,
  0x4d, 0xc1, 0x95, 0x8d, 0x35, 0x85, 0xd1, 0x95, 0xc9, 0xa5, 0x85, 0xb1,
  0x35, 0x85, 0xcd, 0xad, 0x4d, 0x10, 0x06, 0x3d, 0xd8, 0x60, 0x24, 0x3e,
  0x41, 0xfc, 0x84, 0x1b, 0x80, 0x03, 0x9b, 0x33, 0xa9, 0xb2, 0xb9, 0x32,
  0x3a, 0xa4, 0xb4, 0x39, 0xba, 0x37, 0xb9, 0xbc, 0x09, 0xc2, 0xb0, 0x07,
  0x1b, 0x8c, 0x24, 0x2c, 0x08, 0xb1, 0x70, 0x03, 0x70, 0x20, 0x72, 0x26,
  0xf5, 0x46, 0x17, 0x46, 0xf7, 0x26, 0x37, 0x41, 0x18, 0xf8, 0x60, 0x03,
  0x92, 0x90, 0x05, 0x51, 0x16, 0x6e, 0xe0, 0x38, 0x72, 0xb0, 0x21, 0x0d,
  0xc4, 0xe0, 0x0d, 0xe6, 0xc0, 0x0e, 0xf2, 0x80, 0x0f, 0xfe, 0x40, 0x14,
  0x4a, 0x01, 0x15, 0x56, 0xc1, 0x15, 0x62, 0x81, 0x16, 0x6e, 0x41, 0x17,
  0x7a, 0x21, 0x1c, 0xc8, 0xe1, 0x1c, 0xd4, 0xa1, 0x1d, 0xe0, 0x61, 0x1e,
  0xec, 0x21, 0x1f, 0xf8, 0xe1, 0x1f, 0x44, 0xa2, 0x24, 0x50, 0x62, 0x25,
  0x5c, 0x22, 0x26, 0x68, 0xe2, 0x26, 0x74, 0xa2, 0x27, 0xc0, 0x62, 0x2c,
  0xcc, 0x62, 0xc3, 0x60, 0xa8, 0xc1, 0x59, 0x4c, 0x10, 0x04, 0x60, 0x03,
  0xb0, 0x61, 0x30, 0xd4, 0x42, 0x2d, 0x36, 0x04, 0x6b, 0xb1, 0x61, 0x18,
  0xd2, 0x82, 0x2d, 0x48, 0xb4, 0x85, 0xa5, 0xb9, 0x4d, 0x10, 0xea, 0x60,
  0x14, 0x26, 0x08, 0x43, 0x1f, 0x6c, 0x18, 0xe0, 0x02, 0x2e, 0x86, 0x0d,
  0x84, 0xf1, 0x16, 0x6c, 0x10, 0x17, 0x1b, 0x8a, 0xb4, 0x70, 0x0b, 0x20,
  0x0d, 0xe4, 0x82, 0x88, 0x98, 0x5c, 0x98, 0xdb, 0x18, 0x5a, 0xd9, 0x1c,
  0x0d, 0x33, 0xb6, 0xb7, 0x30, 0xba, 0xb9, 0x09, 0xc2, 0xe0, 0x07, 0x2c,
  0xd2, 0xdc, 0xe6, 0xe8, 0xe6, 0x26, 0x08, 0xc3, 0x1f, 0x90, 0x48, 0x73,
  0xa3, 0x9b, 0x23, 0x42, 0x57, 0x86, 0xf7, 0xc5, 0xf6, 0x16, 0x46, 0x46,
  0x84, 0xae, 0x0c, 0xef, 0xcb, 0xed, 0x4d, 0xae, 0x6d, 0x82, 0x30, 0x80,
  0x02, 0x13, 0xba, 0x32, 0xbc, 0xaf, 0x39, 0xba, 0x37, 0xb9, 0x32, 0x16,
  0x75, 0x69, 0x6e, 0x74, 0x73, 0x1b, 0x20, 0xba, 0x18, 0xea, 0xc2, 0x2e,
  0xee, 0x02, 0x2f, 0xf2, 0x82, 0x0d, 0xf4, 0x82, 0x0d, 0xf6, 0x82, 0x2f,
  0xfa, 0x82, 0xf0, 0x8b, 0xa4, 0x0a, 0x1b, 0x9b, 0x5d, 0x9b, 0x4b, 0x1a,
  0x59, 0x99, 0x1b, 0xdd, 0x94, 0x20, 0xa8, 0x42, 0x86, 0xe7, 0x62, 0x57,
  0x26, 0x37, 0x97, 0xf6, 0xe6, 0x36, 0x25, 0x20, 0x9a, 0x90, 0xe1, 0xb9,
  0xd8, 0x85, 0xb1, 0xd9, 0x95, 0xc9, 0x4d, 0x09, 0x8c, 0x3a, 0x64, 0x78,
  0x2e, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
  0x53, 0x82, 0xa4, 0x0c, 0x19, 0x9e, 0x8b, 0x5c, 0xd9, 0xdc, 0x5b, 0x9d,
  0xdc, 0x58, 0xd9, 0xdc, 0x94, 0x00, 0x0d, 0x2a, 0x91, 0xe1, 0xb9, 0xd0,
  0xe5, 0xc1, 0x95, 0x05, 0xb9, 0xb9, 0xbd, 0xd1, 0x85, 0xd1, 0xa5, 0xbd,
  0xb9, 0xcd, 0x4d, 0x11, 0xce, 0x82, 0x2d, 0xea, 0x90, 0xe1, 0xb9, 0x94,
  0xb9, 0xd1, 0xc9, 0xe5, 0x41, 0xbd, 0xa5, 0xb9, 0xd1, 0xcd, 0x4d, 0x09,
  0xe4, 0xa2, 0x0b, 0x19, 0x9e, 0xcb, 0xd8, 0x5b, 0x9d, 0x1b, 0x5d, 0x99,
  0xdc, 0xdc, 0x94, 0xc0, 0x2f, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x5d, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66,
  0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07,
  0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10,
  0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce,
  0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b,
  0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c,
  0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07,
  0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11,
  0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0,
  0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8,
  0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b,
  0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b,
  0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87,
  0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07,
  0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87,
  0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81,
  0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30,
  0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4,
  0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca,
  0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39,
  0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b,
  0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b,
  0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87,
  0x76, 0x80, 0x87, 0x19, 0xd5, 0x43, 0x0e, 0xf8, 0xe0, 0x06, 0xe3, 0xf0,
  0x0e, 0xee, 0x40, 0x0f, 0xf2, 0xf0, 0x0e, 0xec, 0x60, 0x0e, 0xec, 0xf0,
  0x0e, 0xf7, 0xe0, 0x06, 0xe8, 0x90, 0x0e, 0xee, 0x40, 0x0f, 0xf3, 0x30,
  0x43, 0x81, 0xd8, 0x81, 0x1d, 0xec, 0xa1, 0x1d, 0xdc, 0x80, 0x1d, 0xde,
  0xe1, 0x1d, 0xe0, 0x61, 0x46, 0x14, 0x91, 0x03, 0x3e, 0xb8, 0x01, 0x39,
  0x88, 0xc3, 0x39, 0xb8, 0x81, 0x3d, 0x84, 0x83, 0x3c, 0xb0, 0x43, 0x38,
  0xe4, 0xc3, 0x3b, 0xd4, 0x03, 0x3d, 0xcc, 0x60, 0x24, 0x72, 0xc0, 0x07,
  0x37, 0x10, 0x07, 0x79, 0x28, 0x87, 0x70, 0x58, 0x07, 0x37, 0x10, 0x07,
  0x79, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00,
  0x86, 0x00, 0x0d, 0x97, 0xef, 0x3c, 0x7e, 0x80, 0x34, 0x40, 0x84, 0xf9,
  0xc5, 0x6d, 0x5b, 0xc2, 0x36, 0x5c, 0xbe, 0xf3, 0xf8, 0x42, 0x40, 0x15,
  0x05, 0x11, 0x95, 0x0e, 0x30, 0x94, 0x84, 0x01, 0x08, 0x98, 0x5f, 0xdc,
  0xb6, 0x29, 0x6c, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x04, 0x54, 0x51, 0x10,
  0x51, 0xe9, 0x00, 0x43, 0x49, 0x18, 0x80, 0x80, 0xf9, 0xc8, 0x6d, 0xdb,
  0x82, 0x34, 0x5c, 0xbe, 0xf3, 0xf8, 0x42, 0x44, 0x00, 0x13, 0x11, 0x02,
  0xcd, 0xb0, 0x10, 0x56, 0xe0, 0x0c, 0x97, 0xef, 0x3c, 0xfe, 0xe0, 0x4c,
  0xb7, 0x5f, 0xdc, 0xb6, 0x1d, 0x54, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x01,
  0xcc, 0xb3, 0x10, 0x25, 0x51, 0x11, 0x8b, 0x5f, 0xdc, 0xb6, 0x19, 0x48,
  0xc3, 0xe5, 0x3b, 0x8f, 0x3f, 0x11, 0xd1, 0x84, 0x00, 0x11, 0xe6, 0x17,
  0xb7, 0x6d, 0x02, 0xd5, 0x70, 0xf9, 0xce, 0xe3, 0x4f, 0xc4, 0x35, 0x51,
  0x11, 0x51, 0x3a, 0xc0, 0xe0, 0x17, 0xb7, 0x6d, 0x03, 0xd6, 0x70, 0xf9,
  0xce, 0xe3, 0x4f, 0xc4, 0x35, 0x51, 0x11, 0xc1, 0x4e, 0x4e, 0x44, 0xf8,
  0xc5, 0x6d, 0x5b, 0x80, 0x34, 0x5c, 0xbe, 0xf3, 0xf8, 0xd3, 0x11, 0x11,
  0xc0, 0x20, 0x0e, 0x3e, 0x72, 0xdb, 0x46, 0xf0, 0x0c, 0x97, 0xef, 0x3c,
  0x3e, 0xd5, 0x00, 0x11, 0xe6, 0x17, 0xb7, 0x6d, 0x00, 0x04, 0x03, 0x20,
  0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x41, 0x53, 0x48,
  0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0xc1, 0xce, 0x3e,
  0xd8, 0xd4, 0xda, 0x2f, 0x2e, 0x6c, 0xa9, 0xdb, 0x45, 0xf8, 0xf8, 0x9b,
  0x44, 0x58, 0x49, 0x4c, 0x40, 0x20, 0x00, 0x00, 0x63, 0x00, 0x05, 0x00,
  0x10, 0x08, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x03, 0x01, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x28, 0x20, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde,
  0x21, 0x0c, 0x00, 0x00, 0x07, 0x08, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91,
  0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c,
  0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02,
  0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b,
  0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5,
  0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50,
  0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06,
  0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff,
  0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d, 0x86, 0xf0, 0xff, 0xff,
  0xff, 0xff, 0x03, 0x20, 0x01, 0xd5, 0x06, 0x62, 0xf8, 0xff, 0xff, 0xff,
  0xff, 0x01, 0x90, 0x00, 0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00,
  0x89, 0x20, 0x00, 0x00, 0x96, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09,
  0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3,
  0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c,
  0x10, 0xdc, 0xc1, 0x08, 0x40, 0x09, 0x00, 0x0a, 0xe6, 0x08, 0xc0, 0xa0,
  0x0c, 0xc3, 0x30, 0x10, 0x31, 0x03, 0x70, 0xd3, 0x70, 0xf9, 0x13, 0xf6,
  0x10, 0x92, 0xbf, 0x12, 0xd2, 0x4a, 0x4c, 0x7e, 0x71, 0xdb, 0xa8, 0x30,
  0x0c, 0xc3, 0x18, 0xe6, 0x08, 0x10, 0x42, 0xee, 0x19, 0x2e, 0x7f, 0xc2,
  0x1e, 0x42, 0xf2, 0x43, 0xa0, 0x19, 0x16, 0x02, 0x05, 0x49, 0x51, 0x8e,
  0x41, 0x19, 0x86, 0x61, 0x18, 0x86, 0x81, 0x96, 0xb2, 0x00, 0x83, 0x32,
  0x0c, 0x83, 0x61, 0x18, 0x06, 0x42, 0x4d, 0x19, 0x8c, 0xc1, 0xa0, 0xa7,
  0x20, 0xc6, 0x60, 0x18, 0x86, 0x61, 0x18, 0x14, 0x95, 0xc2, 0x18, 0x0c,
  0xc3, 0xa0, 0xa9, 0x30, 0xc7, 0xa0, 0x28, 0x86, 0x61, 0x18, 0xc3, 0x30,
  0x18, 0x54, 0x15, 0xc2, 0x18, 0x0c, 0x83, 0xae, 0xa3, 0x86, 0xcb, 0x9f,
  0xb0, 0x87, 0x90, 0x7c, 0x6e, 0xa3, 0x8a, 0x95, 0x98, 0xfc, 0xe2, 0xb6,
  0x11, 0x61, 0x18, 0x86, 0x51, 0x88, 0x6c, 0x50, 0x06, 0xd2, 0x8e, 0x1a,
  0x2e, 0x7f, 0xc2, 0x1e, 0x42, 0xf2, 0xb9, 0x8d, 0x2a, 0x56, 0x62, 0xf2,
  0x91, 0xdb, 0x46, 0xc4, 0x30, 0x0c, 0x43, 0x21, 0xb8, 0x41, 0x19, 0xa8,
  0x9b, 0x23, 0x08, 0x8a, 0xa1, 0x0c, 0xc8, 0x30, 0x7c, 0x04, 0x0e, 0x04,
  0x0c, 0x23, 0x10, 0xc6, 0x4c, 0x6d, 0x30, 0x0e, 0xec, 0x10, 0x0e, 0xf3,
  0x30, 0x0f, 0x6e, 0x40, 0x0b, 0xe5, 0x80, 0x0f, 0xf4, 0x50, 0x0f, 0xf2,
  0x50, 0x0e, 0x72, 0x40, 0x0a, 0x7c, 0x60, 0x0f, 0xe5, 0x30, 0x0e, 0xf4,
  0xf0, 0x0e, 0xf2, 0xc0, 0x07, 0xe6, 0xc0, 0x0e, 0xef, 0x10, 0x0e, 0xf4,
  0xc0, 0x06, 0x60, 0x40, 0x07, 0x7e, 0x00, 0x06, 0x7e, 0xa0, 0x07, 0x7a,
  0xd0, 0x0e, 0xe9, 0x00, 0x0f, 0xf3, 0xf0, 0x0b, 0xf4, 0x90, 0x0f, 0xf0,
  0x50, 0x0e, 0x28, 0x18, 0x66, 0x12, 0x83, 0x71, 0x60, 0x87, 0x70, 0x98,
  0x87, 0x79, 0x70, 0x03, 0x5a, 0x28, 0x07, 0x7c, 0xa0, 0x87, 0x7a, 0x90,
  0x87, 0x72, 0x90, 0x03, 0x52, 0xe0, 0x03, 0x7b, 0x28, 0x87, 0x71, 0xa0,
  0x87, 0x77, 0x90, 0x07, 0x3e, 0x30, 0x07, 0x76, 0x78, 0x87, 0x70, 0xa0,
  0x07, 0x36, 0x00, 0x03, 0x3a, 0xf0, 0x03, 0x30, 0xf0, 0x03, 0x24, 0x8c,
  0x24, 0x95, 0x33, 0x85, 0xc1, 0x38, 0xb0, 0x43, 0x38, 0xcc, 0xc3, 0x3c,
  0xb8, 0x01, 0x2d, 0x94, 0x03, 0x3e, 0xd0, 0x43, 0x3d, 0xc8, 0x43, 0x39,
  0xc8, 0x01, 0x29, 0xf0, 0x81, 0x39, 0xb0, 0xc3, 0x3b, 0x84, 0x03, 0x3d,
  0xf8, 0x81, 0x1e, 0xe8, 0x41, 0x3b, 0xa4, 0x03, 0x3c, 0xcc, 0xc3, 0x2f,
  0xd0, 0x43, 0x3e, 0xc0, 0x43, 0x39, 0xa0, 0x60, 0x98, 0xc9, 0x1a, 0x07,
  0x76, 0x08, 0x87, 0x79, 0x98, 0x07, 0x37, 0xa0, 0x85, 0x72, 0xc0, 0x07,
  0x7a, 0xa8, 0x07, 0x79, 0x28, 0x07, 0x39, 0x20, 0x05, 0x3e, 0x30, 0x07,
  0x76, 0x78, 0x87, 0x70, 0xa0, 0x07, 0x3f, 0x40, 0x82, 0x71, 0x12, 0x3a,
  0x13, 0x19, 0x8c, 0x03, 0x3b, 0x84, 0xc3, 0x3c, 0xcc, 0x83, 0x1b, 0xc8,
  0xc2, 0x2d, 0xd0, 0x42, 0x39, 0xe0, 0x03, 0x3d, 0xd4, 0x83, 0x3c, 0x94,
  0x83, 0x1c, 0x90, 0x02, 0x1f, 0xd8, 0x43, 0x39, 0x8c, 0x03, 0x3d, 0xbc,
  0x83, 0x3c, 0xf0, 0x81, 0x39, 0xb0, 0xc3, 0x3b, 0x84, 0x03, 0x3d, 0xb0,
  0x01, 0x18, 0xd0, 0x81, 0x1f, 0x80, 0x81, 0x1f, 0xa0, 0x60, 0x24, 0x35,
  0x09, 0xc6, 0xb3, 0x84, 0x05, 0x90, 0x24, 0x9f, 0x01, 0xa6, 0x08, 0xb9,
  0xfc, 0x62, 0x71, 0x80, 0xc9, 0xc7, 0x7d, 0x1c, 0x05, 0xec, 0x30, 0xc2,
  0x60, 0x0c, 0x23, 0x08, 0xc6, 0x30, 0x82, 0x30, 0xdc, 0x63, 0x2c, 0x4e,
  0x00, 0x2c, 0x9c, 0xd3, 0x48, 0x13, 0xd0, 0x4c, 0x12, 0x42, 0x83, 0xb6,
  0x1d, 0xc7, 0x71, 0x74, 0x8d, 0xf7, 0x7d, 0xdf, 0xf7, 0x7d, 0x5f, 0xd8,
  0x30, 0x0c, 0xc3, 0x30, 0x0c, 0xc3, 0x30, 0x0c, 0xc3, 0x30, 0x0c, 0xc3,
  0x18, 0x86, 0x61, 0x18, 0x46, 0x8a, 0x6f, 0x92, 0xa6, 0x88, 0x12, 0x26,
  0x9f, 0x05, 0x98, 0x67, 0x21, 0x22, 0x76, 0x02, 0x26, 0x02, 0x05, 0x03,
  0xcd, 0x73, 0x04, 0xa0, 0x30, 0x05, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0,
  0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0,
  0x87, 0x0d, 0xae, 0x50, 0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d,
  0x00, 0x0f, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x90, 0x0e, 0x71, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78,
  0xa0, 0x07, 0x78, 0xd0, 0x06, 0xe9, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x71,
  0x60, 0x07, 0x6d, 0x90, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72,
  0xd0, 0x06, 0xe9, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d,
  0x60, 0x0e, 0x71, 0x60, 0x07, 0x7a, 0x10, 0x07, 0x76, 0xd0, 0x06, 0xe6,
  0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x76,
  0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xee, 0x80, 0x07, 0x7a,
  0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x7a, 0x60, 0x07, 0x74,
  0x30, 0xe4, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x60, 0xc8, 0x43, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xc0, 0x90, 0x67, 0x01, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x80, 0x21, 0x4f, 0x03, 0x04, 0xc0, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x9e, 0x07, 0x08, 0x80, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x11, 0x10, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x26, 0x20, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x54, 0x40,
  0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0xb9,
  0x80, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8,
  0xa3, 0x01, 0x01, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0,
  0x90, 0xa7, 0x03, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x80, 0x21, 0x0f, 0x18, 0x00, 0x01, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x40, 0x16, 0x08, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x32, 0x1e, 0x98, 0x14, 0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47,
  0xc6, 0x04, 0x43, 0x1a, 0x4a, 0xa0, 0x0c, 0x8a, 0x61, 0x04, 0xa0, 0x08,
  0x4a, 0xa2, 0x00, 0x0d, 0x0a, 0xa1, 0x20, 0xe8, 0x1b, 0x01, 0xa0, 0xba,
  0x00, 0x09, 0x01, 0x11, 0x28, 0x9d, 0x01, 0xa0, 0x75, 0x06, 0x80, 0xe4,
  0x19, 0x00, 0xa2, 0x67, 0x00, 0xc8, 0x9c, 0x01, 0x00, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x5d, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90,
  0x46, 0x02, 0x13, 0x44, 0x35, 0x18, 0x63, 0x0b, 0x73, 0x3b, 0x03, 0xb1,
  0x2b, 0x93, 0x9b, 0x4b, 0x7b, 0x73, 0x03, 0x99, 0x71, 0xb9, 0x01, 0x41,
  0xa1, 0x0b, 0x3b, 0x9b, 0x7b, 0x91, 0x2a, 0x62, 0x2a, 0x0a, 0x9a, 0x2a,
  0xfa, 0x9a, 0xb9, 0x81, 0x79, 0x31, 0x4b, 0x73, 0x0b, 0x63, 0x4b, 0xd9,
  0x10, 0x04, 0x13, 0x84, 0x81, 0x99, 0x20, 0x0c, 0xcd, 0x06, 0x61, 0x20,
  0x26, 0x08, 0x83, 0xb3, 0x41, 0x18, 0x0c, 0x0a, 0x63, 0x73, 0x1b, 0x06,
  0xc4, 0x20, 0x26, 0x08, 0xc3, 0x33, 0x41, 0x30, 0x83, 0x8d, 0xc0, 0x04,
  0x61, 0x80, 0x26, 0x08, 0x43, 0xb4, 0x41, 0x50, 0x9c, 0x0d, 0x89, 0xb2,
  0x30, 0x8a, 0x32, 0x34, 0xca, 0xb3, 0x21, 0x19, 0x16, 0x46, 0x19, 0x86,
  0x46, 0x79, 0x36, 0x24, 0xcd, 0xc2, 0x28, 0xcd, 0xd0, 0x28, 0xcf, 0x04,
  0x21, 0x0d, 0xae, 0x0d, 0x09, 0x31, 0x31, 0x0a, 0x31, 0x34, 0xca, 0xb3,
  0x81, 0x80, 0x22, 0x89, 0x9a, 0x20, 0xac, 0x01, 0x36, 0x41, 0xf8, 0xaa,
  0x0d, 0x8b, 0x62, 0x31, 0x8a, 0x32, 0x34, 0xd7, 0x75, 0x3d, 0x1b, 0x96,
  0xc1, 0x62, 0x94, 0x61, 0x68, 0xae, 0xeb, 0x7a, 0x36, 0x08, 0x58, 0x36,
  0x41, 0x90, 0x83, 0x6c, 0x82, 0x30, 0x48, 0x1b, 0x10, 0x65, 0x63, 0x14,
  0x65, 0xe0, 0x80, 0x0d, 0x41, 0x37, 0x41, 0xa0, 0x03, 0x6d, 0x03, 0xa2,
  0x7c, 0x8c, 0xa2, 0x0c, 0x0a, 0xb0, 0x21, 0x00, 0x83, 0x0d, 0x44, 0xa5,
  0x79, 0x61, 0x30, 0x41, 0x10, 0x00, 0x12, 0x6d, 0x61, 0x69, 0x6e, 0x13,
  0x84, 0x3a, 0xb0, 0x26, 0x08, 0xc3, 0x34, 0x41, 0x18, 0xa8, 0x0d, 0xc3,
  0x19, 0x9c, 0xc1, 0xb0, 0x81, 0x50, 0xca, 0xc0, 0x0c, 0xd0, 0x60, 0x43,
  0x31, 0x06, 0x64, 0x00, 0x88, 0x41, 0x1a, 0x90, 0x22, 0xc3, 0x73, 0x19,
  0x7b, 0x73, 0xa3, 0x93, 0x7b, 0x63, 0x33, 0x63, 0x7b, 0xbb, 0x73, 0x41,
  0x4b, 0x73, 0xa3, 0x9b, 0x5b, 0x31, 0xb0, 0xc1, 0x1a, 0x0c, 0x55, 0xd8,
  0xd8, 0xec, 0xda, 0x5c, 0xd2, 0xc8, 0xca, 0xdc, 0xe8, 0xa6, 0x04, 0x41,
  0x15, 0x32, 0x3c, 0x17, 0xbb, 0x32, 0xb9, 0xb9, 0xb4, 0x37, 0xb7, 0x29,
  0x01, 0xd1, 0x84, 0x0c, 0xcf, 0xc5, 0x2e, 0x8c, 0xcd, 0xae, 0x4c, 0x6e,
  0x4a, 0x60, 0xd4, 0x21, 0xc3, 0x73, 0x99, 0x43, 0x0b, 0x23, 0x2b, 0x93,
  0x6b, 0x7a, 0x23, 0x2b, 0x63, 0x9b, 0x12, 0x20, 0x65, 0xc8, 0xf0, 0x5c,
  0xe4, 0xca, 0xe6, 0xde, 0xea, 0xe4, 0xc6, 0xca, 0xe6, 0xa6, 0x04, 0x61,
  0x50, 0x87, 0x0c, 0xcf, 0xa5, 0xcc, 0x8d, 0x4e, 0x2e, 0x0f, 0xea, 0x2d,
  0xcd, 0x8d, 0x6e, 0x6e, 0x4a, 0x90, 0x06, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x5d, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66,
  0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07,
  0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10,
  0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce,
  0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b,
  0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c,
  0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07,
  0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11,
  0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0,
  0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8,
  0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b,
  0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b,
  0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87,
  0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07,
  0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87,
  0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81,
  0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30,
  0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4,
  0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca,
  0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39,
  0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b,
  0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b,
  0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87,
  0x76, 0x80, 0x87, 0x19, 0xd5, 0x43, 0x0e, 0xf8, 0xe0, 0x06, 0xe3, 0xf0,
  0x0e, 0xee, 0x40, 0x0f, 0xf2, 0xf0, 0x0e, 0xec, 0x60, 0x0e, 0xec, 0xf0,
  0x0e, 0xf7, 0xe0, 0x06, 0xe8, 0x90, 0x0e, 0xee, 0x40, 0x0f, 0xf3, 0x30,
  0x43, 0x81, 0xd8, 0x81, 0x1d, 0xec, 0xa1, 0x1d, 0xdc, 0x80, 0x1d, 0xde,
  0xe1, 0x1d, 0xe0, 0x61, 0x46, 0x14, 0x91, 0x03, 0x3e, 0xb8, 0x01, 0x39,
  0x88, 0xc3, 0x39, 0xb8, 0x81, 0x3d, 0x84, 0x83, 0x3c, 0xb0, 0x43, 0x38,
  0xe4, 0xc3, 0x3b, 0xd4, 0x03, 0x3d, 0xcc, 0x60, 0x24, 0x72, 0xc0, 0x07,
  0x37, 0x10, 0x07, 0x79, 0x28, 0x87, 0x70, 0x58, 0x07, 0x37, 0x10, 0x07,
  0x79, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00,
  0x86, 0x00, 0x0d, 0x97, 0xef, 0x3c, 0x7e, 0x80, 0x34, 0x40, 0x84, 0xf9,
  0xc5, 0x6d, 0x5b, 0xc2, 0x36, 0x5c, 0xbe, 0xf3, 0xf8, 0x42, 0x40, 0x15,
  0x05, 0x11, 0x95, 0x0e, 0x30, 0x94, 0x84, 0x01, 0x08, 0x98, 0x5f, 0xdc,
  0xb6, 0x29, 0x6c, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x04, 0x54, 0x51, 0x10,
  0x51, 0xe9, 0x00, 0x43, 0x49, 0x18, 0x80, 0x80, 0xf9, 0xc8, 0x6d, 0xdb,
  0x82, 0x34, 0x5c, 0xbe, 0xf3, 0xf8, 0x42, 0x44, 0x00, 0x13, 0x11, 0x02,
  0xcd, 0xb0, 0x10, 0x56, 0xe0, 0x0c, 0x97, 0xef, 0x3c, 0xfe, 0xe0, 0x4c,
  0xb7, 0x5f, 0xdc, 0xb6, 0x1d, 0x54, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x01,
  0xcc, 0xb3, 0x10, 0x25, 0x51, 0x11, 0x8b, 0x5f, 0xdc, 0xb6, 0x19, 0x48,
  0xc3, 0xe5, 0x3b, 0x8f, 0x3f, 0x11, 0xd1, 0x84, 0x00, 0x11, 0xe6, 0x17,
  0xb7, 0x6d, 0x02, 0xd5, 0x70, 0xf9, 0xce, 0xe3, 0x4f, 0xc4, 0x35, 0x51,
  0x11, 0x51, 0x3a, 0xc0, 0xe0, 0x17, 0xb7, 0x6d, 0x03, 0xd6, 0x70, 0xf9,
  0xce, 0xe3, 0x4f, 0xc4, 0x35, 0x51, 0x11, 0xc1, 0x4e, 0x4e, 0x44, 0xf8,
  0xc5, 0x6d, 0x5b, 0x80, 0x34, 0x5c, 0xbe, 0xf3, 0xf8, 0xd3, 0x11, 0x11,
  0xc0, 0x20, 0x0e, 0x3e, 0x72, 0xdb, 0x46, 0xf0, 0x0c, 0x97, 0xef, 0x3c,
  0x3e, 0xd5, 0x00, 0x11, 0xe6, 0x17, 0xb7, 0x6d, 0x00, 0x04, 0x03, 0x20,
  0x0d, 0x00, 0x00, 0x00, 0x61, 0x20, 0x00, 0x00, 0xfb, 0x05, 0x00, 0x00,
  0x13, 0x04, 0x44, 0x2c, 0x10, 0x00, 0x00, 0x00, 0x49, 0x00, 0x00, 0x00,
  0x34, 0x94, 0xc3, 0x0c, 0x40, 0xd9, 0x95, 0x5b, 0xf1, 0x95, 0x5c, 0xc9,
  0x14, 0x57, 0xc1, 0x94, 0x48, 0x11, 0x06, 0x94, 0x61, 0x40, 0xa9, 0x94,
  0x6e, 0x40, 0x91, 0x94, 0x4b, 0x19, 0x95, 0x46, 0x79, 0x14, 0x48, 0xb1,
  0x14, 0x47, 0x29, 0x14, 0x4a, 0x99, 0x14, 0x12, 0x21, 0x45, 0x50, 0x06,
  0x25, 0x50, 0x1e, 0x23, 0x00, 0x64, 0x8c, 0x11, 0x80, 0x20, 0x08, 0x92,
  0x60, 0x30, 0x46, 0x70, 0xcf, 0xef, 0x7f, 0xff, 0xc2, 0x18, 0xc1, 0xda,
  0xc2, 0x20, 0xfe, 0x0b, 0x63, 0x04, 0x20, 0x08, 0x82, 0xf0, 0x37, 0x46,
  0x00, 0x82, 0x20, 0x08, 0x82, 0xc2, 0x18, 0x01, 0x08, 0x82, 0x20, 0x0c,
  0x06, 0x63, 0x04, 0xbe, 0x48, 0xa3, 0xf0, 0x37, 0x46, 0x00, 0x82, 0x20,
  0x18, 0x83, 0xc1, 0x18, 0xc1, 0x9c, 0xb3, 0xe6, 0xfd, 0x8d, 0x11, 0xb4,
  0xe6, 0x9c, 0xd3, 0xde, 0x18, 0x81, 0x49, 0xbe, 0xe2, 0xfd, 0x8d, 0x11,
  0x84, 0x24, 0x18, 0xc2, 0xdf, 0x18, 0x41, 0xdf, 0xb7, 0x2c, 0xae, 0x8d,
  0x11, 0xdc, 0x3e, 0xbb, 0xd7, 0xdf, 0x18, 0x01, 0x08, 0x82, 0x20, 0xfc,
  0x0b, 0x63, 0x04, 0x3a, 0x6b, 0xce, 0xe9, 0x2f, 0x8c, 0x11, 0x84, 0x6c,
  0xa8, 0xa2, 0xdf, 0x18, 0x81, 0xce, 0x9a, 0x73, 0xf8, 0x8d, 0x11, 0x84,
  0x24, 0x18, 0xe2, 0xdd, 0x18, 0x01, 0x08, 0x82, 0xf8, 0x19, 0x06, 0x63,
  0x04, 0x6b, 0xad, 0xd6, 0xf2, 0x37, 0x46, 0xb0, 0xd6, 0x6a, 0xad, 0x7f,
  0x63, 0x04, 0x7d, 0xdf, 0xb2, 0xe0, 0x36, 0x46, 0x00, 0x82, 0x20, 0xa8,
  0x82, 0xc1, 0x18, 0xc1, 0x5a, 0xab, 0xb5, 0xfa, 0x8d, 0x11, 0x80, 0x20,
  0x08, 0xd2, 0xdf, 0x18, 0xc1, 0x5e, 0xe2, 0x7f, 0xfe, 0x8d, 0x11, 0x84,
  0x24, 0x18, 0x82, 0xde, 0x18, 0xc1, 0xfb, 0xff, 0xff, 0xfd, 0x8d, 0x11,
  0xcc, 0x67, 0xa8, 0xee, 0xdf, 0x18, 0x41, 0xbf, 0x9e, 0x60, 0x3a, 0x8d,
  0x11, 0x80, 0x20, 0x08, 0x82, 0x60, 0x30, 0x46, 0x00, 0x82, 0x20, 0x88,
  0xff, 0xc2, 0x0c, 0xc0, 0x18, 0x01, 0x08, 0x82, 0x20, 0xfe, 0x8d, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x00, 0x06,
  0xb4, 0xe0, 0x07, 0x67, 0x30, 0x0b, 0xb3, 0xa0, 0x0a, 0x23, 0x06, 0x09,
  0x00, 0x82, 0x60, 0x00, 0x06, 0xb5, 0xf0, 0x07, 0x68, 0x10, 0x0b, 0xb1,
  0xb0, 0x0a, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x00, 0x06, 0xb6, 0x00,
  0x0a, 0x67, 0x40, 0x0b, 0xb4, 0xc0, 0x0a, 0x23, 0x06, 0x09, 0x00, 0x82,
  0x60, 0x00, 0x06, 0xb7, 0x10, 0x0a, 0x68, 0x20, 0x0b, 0xb2, 0xd0, 0x0a,
  0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x00, 0x06, 0xb8, 0x20, 0x0a, 0x69,
  0x70, 0x0b, 0xb7, 0xe0, 0x0a, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x00,
  0x06, 0xb9, 0x30, 0x0a, 0x6a, 0x50, 0x0b, 0xb5, 0xf0, 0x0a, 0x23, 0x06,
  0x09, 0x00, 0x82, 0x60, 0x00, 0x06, 0xba, 0x40, 0x0a, 0x6e, 0x60, 0x0b,
  0xb6, 0x00, 0x0b, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x00, 0x06, 0xbb,
  0x50, 0x0a, 0x70, 0x70, 0x0b, 0xb7, 0x10, 0x0b, 0x23, 0x06, 0x06, 0x00,
  0x82, 0x60, 0x40, 0x98, 0x83, 0x1f, 0xe0, 0xc2, 0x88, 0x81, 0x01, 0x80,
  0x20, 0x18, 0x10, 0xe7, 0xf0, 0x07, 0xbc, 0x30, 0x62, 0x70, 0x00, 0x20,
  0x08, 0x06, 0xdd, 0x2f, 0xac, 0xc2, 0x40, 0x0a, 0x37, 0x18, 0x76, 0x83,
  0x61, 0x26, 0xb8, 0x01, 0x7c, 0x4c, 0x78, 0x03, 0xf8, 0x8c, 0x18, 0x1c,
  0x00, 0x08, 0x82, 0x81, 0x56, 0x0e, 0xb0, 0x80, 0xf4, 0xc1, 0x68, 0x42,
  0x00, 0x8c, 0x26, 0x08, 0x81, 0x09, 0x85, 0x7c, 0x4c, 0x28, 0xe4, 0x33,
  0x62, 0xd0, 0x00, 0x20, 0x08, 0x06, 0x4b, 0x3c, 0xb4, 0x82, 0x44, 0x0e,
  0xcc, 0x62, 0x0b, 0xb6, 0x60, 0x0b, 0xb6, 0x30, 0x9a, 0x10, 0x00, 0x16,
  0xd4, 0x81, 0x7c, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0x40, 0x6b, 0x07,
  0x5c, 0x80, 0x58, 0x61, 0x34, 0x21, 0x08, 0x86, 0x23, 0x86, 0x40, 0xf8,
  0x66, 0x19, 0x02, 0x21, 0x18, 0x31, 0x70, 0x00, 0x10, 0x04, 0x83, 0xc6,
  0x1e, 0x64, 0x21, 0x93, 0x22, 0x5e, 0x98, 0x83, 0x39, 0x98, 0x03, 0x36,
  0x00, 0x85, 0x59, 0x82, 0x61, 0x34, 0x01, 0x0a, 0x2a, 0x90, 0x60, 0x34,
  0x41, 0x02, 0x2a, 0xa8, 0x60, 0xc4, 0xa0, 0x01, 0x40, 0x10, 0x0c, 0x96,
  0x7d, 0xb8, 0x85, 0xcc, 0x1d, 0x82, 0x01, 0x1c, 0xc0, 0x01, 0x1c, 0xc0,
  0x61, 0x34, 0x21, 0x00, 0x46, 0x13, 0x84, 0x60, 0x34, 0x61, 0x10, 0x46,
  0x13, 0x88, 0xc1, 0x08, 0x34, 0x90, 0x8f, 0x11, 0x69, 0x20, 0x1f, 0x13,
  0xd2, 0x00, 0x3e, 0x26, 0xa8, 0x01, 0x7c, 0x46, 0x0c, 0x0c, 0x00, 0x04,
  0xc1, 0xe0, 0x11, 0x09, 0x7c, 0x10, 0x4c, 0x0d, 0x82, 0xf8, 0x8c, 0x18,
  0x18, 0x00, 0x08, 0x82, 0xc1, 0x43, 0x12, 0xfa, 0x30, 0x98, 0x10, 0xc4,
  0xc7, 0x56, 0x21, 0x88, 0xcf, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x3c,
  0x27, 0xf1, 0x0e, 0xc1, 0x70, 0x04, 0xe2, 0x06, 0xc4, 0x37, 0x1c, 0x81,
  0xbc, 0x01, 0xf1, 0x4d, 0x37, 0xcc, 0x41, 0x1c, 0x08, 0xd3, 0x0d, 0x74,
  0x20, 0x07, 0x82, 0x09, 0x85, 0x7c, 0x4c, 0x30, 0xe4, 0x63, 0x8e, 0x10,
  0x1f, 0x73, 0x84, 0xf8, 0x8c, 0x18, 0x2c, 0x00, 0x08, 0x82, 0x41, 0xf4,
  0x12, 0xf5, 0x20, 0x04, 0x8b, 0x10, 0x2c, 0x23, 0x06, 0x06, 0x00, 0x82,
  0x60, 0xf0, 0xc4, 0xc4, 0x3c, 0x04, 0x46, 0x04, 0xf2, 0x31, 0x42, 0x90,
  0x8f, 0x0d, 0x8f, 0x7c, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0x40, 0x83,
  0x89, 0x7d, 0x98, 0x03, 0x93, 0x18, 0x4d, 0x08, 0x80, 0xd1, 0x04, 0x21,
  0x18, 0x4d, 0x18, 0x84, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30, 0xd0, 0x68,
  0xe2, 0x1f, 0xee, 0x60, 0x1d, 0x46, 0x13, 0x02, 0x60, 0x34, 0x41, 0x08,
  0x46, 0x13, 0x06, 0x61, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0x34, 0x9c,
  0x18, 0x89, 0x3d, 0x98, 0x89, 0xd1, 0x84, 0x00, 0x18, 0x4d, 0x10, 0x82,
  0xd1, 0x84, 0x41, 0xb0, 0x67, 0x91, 0xcf, 0x88, 0x01, 0x02, 0x80, 0x20,
  0x18, 0x4c, 0x60, 0x31, 0x12, 0xcb, 0x13, 0x8c, 0x18, 0x20, 0x00, 0x08,
  0x82, 0xc1, 0x14, 0x16, 0x24, 0xb1, 0x3c, 0x81, 0x29, 0x92, 0x7c, 0x46,
  0x0c, 0x10, 0x00, 0x04, 0xc1, 0x60, 0x1a, 0x0b, 0x93, 0x50, 0xa4, 0x60,
  0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x26, 0xb2, 0x38, 0x09, 0x45, 0x0a,
  0x2c, 0xa9, 0xe4, 0x33, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x93, 0x59,
  0xa4, 0x44, 0x52, 0x05, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x30, 0x9d,
  0x85, 0x4a, 0x24, 0x55, 0x30, 0x62, 0xd0, 0x00, 0x20, 0x08, 0x06, 0x0b,
  0x5b, 0xa0, 0xc4, 0x2a, 0xfc, 0xc4, 0x29, 0x98, 0x42, 0x4c, 0xc4, 0x44,
  0x4c, 0xc4, 0xc4, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x08, 0x81, 0x09, 0xe3,
  0x20, 0x9f, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30, 0xd0, 0xd2, 0x82, 0x26,
  0x58, 0xa1, 0x25, 0x46, 0x13, 0x82, 0x61, 0xc4, 0xe0, 0x00, 0x40, 0x10,
  0x0c, 0xb4, 0xb5, 0xb0, 0x09, 0x57, 0x00, 0x8b, 0xd1, 0x84, 0x00, 0x18,
  0x4d, 0x10, 0x82, 0xd1, 0x84, 0x41, 0x18, 0x4d, 0x20, 0x06, 0x13, 0x50,
  0x41, 0x3e, 0x26, 0xa0, 0x82, 0x7c, 0x4c, 0x30, 0xe0, 0x63, 0x82, 0x01,
  0x9f, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0x78, 0xf2, 0xe2, 0x2d, 0x14,
  0x0b, 0x87, 0x20, 0x3e, 0x16, 0xa8, 0x82, 0x7c, 0x2c, 0x68, 0xe0, 0x63,
  0x81, 0x21, 0x1f, 0x13, 0x0c, 0xf9, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82,
  0x81, 0xa6, 0x17, 0x65, 0xd1, 0x0b, 0x38, 0x31, 0x9a, 0x10, 0x00, 0xa3,
  0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0xa3, 0x09, 0xc4, 0x30, 0x1c, 0x51,
  0xa9, 0x43, 0xf0, 0x99, 0x4a, 0x20, 0xf1, 0xb1, 0x95, 0x40, 0xe2, 0x63,
  0x2c, 0x61, 0x0b, 0xf1, 0x19, 0x31, 0x58, 0x00, 0x10, 0x04, 0x83, 0xe8,
  0x34, 0xda, 0x62, 0x10, 0x82, 0x41, 0x08, 0x46, 0x0c, 0x0c, 0x00, 0x04,
  0xc1, 0xe0, 0x49, 0x8d, 0xb5, 0x08, 0x2c, 0x28, 0xe4, 0x63, 0x42, 0x21,
  0x1f, 0x1b, 0x0a, 0xf9, 0x4c, 0x37, 0x0c, 0xf3, 0x90, 0x4c, 0x37, 0x0c,
  0xf4, 0xa0, 0x4c, 0x37, 0x0c, 0xf8, 0xb0, 0x8c, 0x18, 0x2c, 0x00, 0x08,
  0x82, 0x41, 0xf4, 0x1a, 0x75, 0xd1, 0x06, 0x6a, 0x70, 0x06, 0x83, 0x10,
  0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0xc1, 0x13, 0x1b, 0xa7, 0x11, 0x18,
  0x28, 0xe0, 0x84, 0x7c, 0x0c, 0x14, 0x72, 0x42, 0x3e, 0x06, 0x0a, 0x3a,
  0x21, 0x1f, 0x1b, 0x76, 0x02, 0x3e, 0x36, 0xf0, 0x04, 0x7c, 0x6c, 0xe8,
  0x09, 0xf8, 0x8c, 0x18, 0x38, 0x00, 0x08, 0x82, 0x41, 0x93, 0x1b, 0x75,
  0xc1, 0x0f, 0xf5, 0x40, 0x0f, 0x7f, 0x31, 0x08, 0x01, 0x2f, 0x8c, 0xc5,
  0x88, 0x41, 0x03, 0x80, 0x20, 0x18, 0x2c, 0xba, 0x61, 0x17, 0xfa, 0xd0,
  0x1a, 0xf5, 0x40, 0x0f, 0x7f, 0xf1, 0x17, 0x7f, 0xf1, 0x17, 0xa3, 0x09,
  0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83, 0x30, 0x9a, 0x40, 0x0c,
  0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0xa0, 0xe1, 0xc6, 0x68, 0xec, 0x83,
  0x5b, 0x8c, 0x26, 0x04, 0x80, 0x05, 0x65, 0x21, 0x9f, 0x11, 0x83, 0x03,
  0x00, 0x41, 0x30, 0xd0, 0x76, 0xc3, 0x34, 0xfc, 0x61, 0x36, 0x46, 0x13,
  0x02, 0x60, 0x34, 0x41, 0x08, 0x46, 0x13, 0x06, 0x61, 0x34, 0x81, 0x18,
  0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0xe0, 0x29, 0x8f, 0xdd, 0xa0, 0x07,
  0x0b, 0x08, 0xf9, 0x58, 0x60, 0xc0, 0x67, 0xc4, 0xc0, 0x00, 0x40, 0x10,
  0x0c, 0x1e, 0xf4, 0x20, 0x0d, 0x62, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c,
  0x9e, 0xf4, 0x88, 0x8d, 0xc0, 0x8e, 0x99, 0x80, 0x8f, 0x09, 0x81, 0x7c,
  0x2c, 0x98, 0x09, 0xf8, 0x98, 0x11, 0xc9, 0xc7, 0x02, 0x41, 0x3e, 0x23,
  0x06, 0x07, 0x00, 0x82, 0x60, 0xa0, 0xa9, 0x47, 0x6d, 0xb4, 0x84, 0x6b,
  0x8c, 0x26, 0x04, 0xc3, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x68, 0xec,
  0x71, 0x1b, 0x2f, 0xd1, 0x1a, 0xa3, 0x09, 0x81, 0x30, 0x62, 0x60, 0x00,
  0x20, 0x08, 0x06, 0xcf, 0x7c, 0xa4, 0xc7, 0x60, 0x3b, 0x31, 0x12, 0xf1,
  0x31, 0x21, 0x90, 0x8f, 0x05, 0x25, 0x01, 0x1f, 0x0b, 0x0a, 0xf9, 0x98,
  0x12, 0xd0, 0x67, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0x9e, 0xfc, 0x08,
  0x8f, 0xc0, 0xc2, 0x22, 0x88, 0x8f, 0x05, 0xaf, 0x20, 0x1f, 0x0b, 0x06,
  0xf8, 0x8c, 0x26, 0x30, 0x81, 0x05, 0x73, 0x21, 0x1f, 0x0b, 0xf8, 0x02,
  0x3e, 0x36, 0xd0, 0x85, 0x7c, 0x2c, 0xa0, 0x0b, 0xf8, 0x58, 0x2d, 0x0c,
  0xf1, 0x31, 0x81, 0x88, 0x8f, 0x09, 0x01, 0x7d, 0x46, 0x0c, 0x0c, 0x00,
  0x04, 0xc1, 0xe0, 0x29, 0x91, 0xf6, 0x08, 0xac, 0x2d, 0x82, 0xf8, 0x98,
  0x5b, 0xd8, 0x41, 0x7c, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0xe0, 0x41,
  0x11, 0xf8, 0x08, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0xe0, 0x49, 0x11,
  0xf1, 0x08, 0x2c, 0xe0, 0x0b, 0xf9, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82,
  0xc1, 0xb3, 0x22, 0xe7, 0x11, 0xd8, 0x5c, 0x04, 0xf1, 0xb1, 0xe0, 0x90,
  0x8f, 0xd5, 0x45, 0x10, 0x1f, 0x0b, 0xc4, 0x41, 0x3e, 0x16, 0xdc, 0x05,
  0x7c, 0x0c, 0x2f, 0x02, 0xfa, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x81,
  0xd6, 0x22, 0xf8, 0x01, 0x17, 0xe2, 0x31, 0x9a, 0x10, 0x00, 0x76, 0xf8,
  0x85, 0x7c, 0x2c, 0xe0, 0x0b, 0xf8, 0x98, 0x76, 0x1a, 0xf2, 0xb1, 0x80,
  0x90, 0x8f, 0x05, 0x83, 0x7c, 0x2c, 0x00, 0x0d, 0xf8, 0x0c, 0x47, 0x1c,
  0xa0, 0xe1, 0x7c, 0x17, 0x18, 0x65, 0x81, 0x69, 0xc8, 0xc7, 0x02, 0x42,
  0x3e, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0xa0, 0xe5, 0x08, 0x89, 0xf0,
  0x05, 0x7e, 0x8c, 0x26, 0x04, 0x82, 0x3d, 0xb0, 0x21, 0x1f, 0x43, 0x8d,
  0x20, 0x3e, 0x36, 0xac, 0x81, 0x7c, 0x4c, 0x08, 0xe8, 0x33, 0x62, 0xb0,
  0x00, 0x20, 0x08, 0x06, 0xd1, 0x98, 0xa4, 0x48, 0x48, 0xf8, 0xc3, 0x3e,
  0x9c, 0x83, 0x39, 0xcc, 0xc5, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x3c,
  0x65, 0xd2, 0x22, 0xa6, 0x60, 0xad, 0x11, 0xc4, 0xc7, 0x02, 0x4b, 0x3e,
  0x16, 0x0c, 0xf0, 0xb1, 0x00, 0x37, 0xe4, 0x33, 0x62, 0x70, 0x00, 0x20,
  0x08, 0x06, 0x97, 0x99, 0x88, 0x48, 0x80, 0x1b, 0x23, 0x06, 0x07, 0x00,
  0x82, 0x60, 0x70, 0x9d, 0x89, 0x7e, 0x68, 0xb2, 0x61, 0x41, 0x6e, 0xc8,
  0xc7, 0x02, 0xf5, 0x80, 0x8f, 0xd5, 0x46, 0x40, 0x1f, 0x7b, 0x87, 0xf5,
  0x90, 0x8f, 0xb9, 0x03, 0x7b, 0xc8, 0xc7, 0xe0, 0x81, 0x3d, 0xe4, 0x63,
  0xef, 0xd0, 0x1e, 0xf2, 0x31, 0x81, 0x88, 0x8f, 0x09, 0x44, 0x7c, 0x46,
  0x0c, 0x0e, 0x00, 0x04, 0xc1, 0x40, 0x83, 0x93, 0x1d, 0x99, 0x0d, 0x16,
  0x19, 0x4d, 0x08, 0x80, 0xd1, 0x04, 0x21, 0xb0, 0xad, 0x90, 0x8f, 0x05,
  0x83, 0x7c, 0xac, 0x33, 0xe4, 0x63, 0x01, 0x21, 0x1f, 0x1b, 0x5e, 0x03,
  0x3e, 0x26, 0xbc, 0x06, 0x7c, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0x40,
  0xcb, 0x13, 0x32, 0xe1, 0x0d, 0x1a, 0x19, 0x4d, 0x08, 0x84, 0xd1, 0x04,
  0x61, 0xb0, 0x42, 0x90, 0x8f, 0x15, 0x82, 0x7c, 0x46, 0x0c, 0x1e, 0x00,
  0x04, 0xc1, 0xa0, 0x02, 0x95, 0x33, 0x31, 0x0f, 0xf1, 0x10, 0x82, 0xf5,
  0x58, 0x0f, 0x3c, 0xc1, 0x13, 0x35, 0x49, 0x8f, 0xd1, 0x84, 0x00, 0xb0,
  0x20, 0x45, 0xe4, 0x33, 0x62, 0xf0, 0x00, 0x20, 0x08, 0x06, 0xd5, 0xa8,
  0xa8, 0x09, 0x7a, 0x94, 0x47, 0x41, 0xb8, 0x87, 0x7b, 0xec, 0xc9, 0x9e,
  0xb4, 0x09, 0x7b, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26,
  0x0c, 0xc2, 0x68, 0x02, 0x31, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x81,
  0x66, 0x2a, 0x71, 0x92, 0x1e, 0x7b, 0x32, 0x9a, 0x10, 0x00, 0xa3, 0x09,
  0x42, 0x30, 0x9a, 0x30, 0x08, 0xa3, 0x09, 0xc4, 0x60, 0x02, 0x25, 0x1f,
  0x13, 0x28, 0xf9, 0x98, 0x60, 0xc0, 0xc7, 0x04, 0x03, 0x3e, 0xb6, 0x1f,
  0xe1, 0x10, 0x1f, 0x0b, 0x20, 0xf9, 0x58, 0x60, 0x0e, 0xf0, 0xb1, 0xa0,
  0x90, 0x8f, 0x09, 0x85, 0x7c, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0x40,
  0xa3, 0x95, 0x3f, 0xb9, 0x0f, 0x37, 0x19, 0x4d, 0x08, 0x80, 0xd1, 0x04,
  0x21, 0x30, 0x61, 0x83, 0x8f, 0x09, 0x1b, 0x7c, 0x46, 0x0c, 0x1e, 0x00,
  0x04, 0xc1, 0xa0, 0xda, 0x15, 0x51, 0xf1, 0x8f, 0xfe, 0x10, 0x02, 0x13,
  0x31, 0x91, 0x59, 0x99, 0x95, 0x52, 0x21, 0x91, 0xd1, 0x84, 0x00, 0x18,
  0x4d, 0x10, 0x82, 0xd1, 0x84, 0x61, 0xb0, 0x81, 0x45, 0xe4, 0x63, 0x43,
  0x8b, 0xc8, 0xc7, 0x84, 0x16, 0x81, 0x8f, 0x09, 0x2e, 0x02, 0x9f, 0x11,
  0x03, 0x03, 0x00, 0x41, 0x30, 0x78, 0xcc, 0x85, 0x57, 0x04, 0x73, 0x91,
  0x20, 0x3e, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0xf0, 0xa0, 0x8b, 0xaf,
  0x0c, 0x26, 0x04, 0xf1, 0xb1, 0x37, 0x09, 0xe2, 0x33, 0x62, 0x60, 0x00,
  0x20, 0x08, 0x06, 0xcf, 0xba, 0xcc, 0x4a, 0x30, 0x1c, 0x81, 0xc8, 0x08,
  0xf1, 0x0d, 0x47, 0x20, 0x33, 0x42, 0x7c, 0xd3, 0x0d, 0x37, 0x52, 0x23,
  0xc2, 0x74, 0x03, 0x8e, 0xd8, 0x88, 0x60, 0x42, 0x21, 0x1f, 0x13, 0x0c,
  0xf9, 0x98, 0x23, 0xc4, 0xc7, 0x1c, 0x21, 0x3e, 0x23, 0x06, 0x0b, 0x00,
  0x82, 0x60, 0x10, 0xcd, 0x4b, 0xae, 0x08, 0xc1, 0x22, 0x04, 0xcb, 0x88,
  0x81, 0x01, 0x80, 0x20, 0x18, 0x3c, 0xf5, 0x72, 0x2b, 0x81, 0x11, 0x81,
  0x7c, 0x8c, 0x10, 0xe4, 0x63, 0xc3, 0x23, 0x9f, 0x11, 0x83, 0x03, 0x00,
  0x41, 0x30, 0xe8, 0xe6, 0xe5, 0x57, 0x6e, 0xa4, 0x55, 0x46, 0x13, 0x82,
  0x60, 0xb8, 0x21, 0x80, 0x17, 0x30, 0x18, 0x8e, 0xf8, 0x8f, 0x2d, 0xf8,
  0x2e, 0x30, 0xca, 0x82, 0x50, 0x91, 0xcf, 0x74, 0x83, 0xa8, 0x04, 0xc4,
  0x88, 0xc1, 0x02, 0x80, 0x20, 0x18, 0x44, 0xff, 0x52, 0x2e, 0xbd, 0xa1,
  0x1b, 0xb7, 0x91, 0x06, 0x68, 0xb0, 0x07, 0x23, 0x06, 0x0b, 0x00, 0x82,
  0x60, 0x10, 0x81, 0x8c, 0xb9, 0xbc, 0x87, 0x7b, 0xb4, 0xc7, 0xa2, 0x24,
  0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0xf0, 0x88, 0x8c, 0xba, 0x04, 0xa6,
  0x26, 0x41, 0x7c, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0xe0, 0x21, 0x19,
  0x76, 0x09, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0xe0, 0x29, 0x99, 0x72,
  0x09, 0x4c, 0x4e, 0x78, 0x81, 0x3e, 0x16, 0x08, 0xf2, 0x31, 0x84, 0x1c,
  0xe2, 0x63, 0x81, 0x39, 0xc8, 0x67, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c,
  0x1e, 0x95, 0x01, 0x99, 0x60, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0x9e,
  0x95, 0x09, 0x19, 0xc2, 0x04, 0x5a, 0x81, 0x8f, 0x09, 0xb5, 0x02, 0x1f,
  0x13, 0x6a, 0x45, 0x3e, 0x26, 0xd8, 0x8a, 0x7c, 0x46, 0x0c, 0x0c, 0x00,
  0x04, 0xc1, 0xe0, 0x81, 0x19, 0x7c, 0x11, 0x46, 0x0c, 0x0c, 0x00, 0x04,
  0xc1, 0xe0, 0x89, 0x99, 0x7c, 0x11, 0x4c, 0xe0, 0x13, 0xf9, 0x98, 0xd0,
  0x27, 0xf2, 0xb1, 0x5e, 0x11, 0xe2, 0x63, 0xbe, 0x22, 0xc4, 0xc7, 0x58,
  0x41, 0x2f, 0xe2, 0x63, 0x41, 0x3a, 0xc8, 0x67, 0xc4, 0xc0, 0x00, 0x40,
  0x10, 0x0c, 0x1e, 0x9c, 0x71, 0x99, 0xc0, 0x82, 0x40, 0x3e, 0x16, 0xf0,
  0x8a, 0x7c, 0x6c, 0x20, 0x17, 0xf9, 0x58, 0x30, 0x2a, 0xf0, 0xb1, 0x60,
  0x80, 0x8f, 0xfd, 0x4a, 0x40, 0x1f, 0x0b, 0x7e, 0x05, 0x3e, 0x05, 0x3d,
  0x52, 0x41, 0x20, 0xe6, 0x8c, 0x81, 0x7c, 0x2c, 0x70, 0xe4, 0x63, 0xc1,
  0x20, 0x1f, 0x0b, 0x0c, 0xf9, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0xc1,
  0x63, 0x36, 0x2e, 0xa3, 0x0e, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0xf0,
  0x9c, 0xcd, 0xcb, 0xa8, 0xc3, 0x70, 0x84, 0xc0, 0x0e, 0xc1, 0x37, 0x1c,
  0x21, 0xb0, 0x43, 0xf0, 0x95, 0x10, 0xe8, 0x74, 0x83, 0x11, 0x2b, 0xc1,
  0x70, 0x44, 0x20, 0x2b, 0xce, 0x37, 0xdd, 0x60, 0x0e, 0xb3, 0x12, 0x4c,
  0x37, 0x98, 0x03, 0xad, 0x08, 0xd3, 0x0d, 0xe6, 0x50, 0x2b, 0xc3, 0x74,
  0x83, 0x39, 0xd8, 0x0a, 0x61, 0x06, 0xae, 0xc0, 0xc7, 0x8a, 0x43, 0x3e,
  0x56, 0x20, 0xf2, 0xb1, 0x22, 0x91, 0x8f, 0x15, 0x8a, 0x7c, 0x8c, 0xe8,
  0x0d, 0xf8, 0x18, 0xd1, 0x1b, 0xf0, 0x31, 0xa2, 0x37, 0xe0, 0x63, 0x44,
  0x6f, 0xc0, 0xc7, 0x7a, 0x22, 0x3f, 0xe4, 0x63, 0x41, 0x49, 0xc8, 0xc7,
  0x7e, 0x22, 0x3f, 0xe4, 0x63, 0x81, 0x49, 0xc8, 0xc7, 0x86, 0x58, 0x81,
  0x8f, 0x09, 0xb1, 0x02, 0x1f, 0x13, 0x42, 0x42, 0x3e, 0x26, 0x84, 0x84,
  0x7c, 0x46, 0x0c, 0x1e, 0x00, 0x04, 0xc1, 0xa0, 0xfa, 0x1b, 0xb3, 0x29,
  0x97, 0x70, 0x11, 0x02, 0x75, 0x51, 0x97, 0xbb, 0xb9, 0x9b, 0xb4, 0x41,
  0x97, 0xd1, 0x84, 0x00, 0xb0, 0x00, 0x65, 0xe4, 0x33, 0x62, 0xf0, 0x00,
  0x20, 0x08, 0x06, 0x95, 0xe8, 0xa4, 0xcd, 0xb9, 0x90, 0x4b, 0x41, 0xb4,
  0x4b, 0xbb, 0xe8, 0x8d, 0xde, 0xb0, 0xcd, 0xba, 0x8c, 0x26, 0x04, 0xc0,
  0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c, 0xc2, 0x68, 0x02, 0x31, 0x18, 0x3f,
  0x30, 0xf2, 0x31, 0x7e, 0x60, 0xe4, 0x63, 0x02, 0x48, 0xc0, 0xc7, 0x04,
  0x90, 0x80, 0x8f, 0xe9, 0x83, 0x22, 0x1f, 0x0b, 0x7e, 0x03, 0x3e, 0x16,
  0x10, 0xf2, 0x31, 0x81, 0x90, 0x8f, 0xe1, 0x83, 0x04, 0x1f, 0xc3, 0x07,
  0x09, 0x3e, 0x23, 0x06, 0x0f, 0x00, 0x82, 0x60, 0x50, 0xc5, 0x0e, 0xde,
  0xd0, 0xcb, 0xbc, 0x08, 0x01, 0xbf, 0xf0, 0x4b, 0xea, 0xa4, 0xce, 0xde,
  0xe8, 0xcb, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2, 0x30,
  0xd8, 0x20, 0x32, 0xf2, 0xb1, 0x61, 0x64, 0xe4, 0x63, 0xc2, 0xc8, 0xc0,
  0xc7, 0x04, 0x92, 0x81, 0xcf, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x3c,
  0xbc, 0x23, 0x3b, 0x82, 0x91, 0x4c, 0x10, 0x9f, 0x11, 0x03, 0x03, 0x00,
  0x41, 0x30, 0x78, 0x7c, 0x87, 0x76, 0x06, 0x13, 0x82, 0xf8, 0x58, 0xd9,
  0x04, 0xf1, 0x19, 0x31, 0x30, 0x00, 0x10, 0x04, 0x83, 0x27, 0x7c, 0x52,
  0x27, 0x18, 0x8e, 0x40, 0x50, 0x86, 0xf8, 0x86, 0x23, 0x90, 0x94, 0x21,
  0xbe, 0xe9, 0x86, 0x96, 0x59, 0x19, 0x61, 0xba, 0xc1, 0x65, 0x58, 0x46,
  0x30, 0xa1, 0x90, 0x8f, 0x09, 0x86, 0x7c, 0xcc, 0x11, 0xe2, 0x63, 0x8e,
  0x10, 0x9f, 0x11, 0x83, 0x05, 0x00, 0x41, 0x30, 0x88, 0xd2, 0xe7, 0x75,
  0x84, 0x60, 0x11, 0x82, 0x65, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0x9e,
  0xf5, 0x69, 0x9d, 0xc0, 0x88, 0x40, 0x3e, 0x46, 0x08, 0xf2, 0xb1, 0xe1,
  0x91, 0xcf, 0x70, 0x84, 0xbc, 0x60, 0xc1, 0x77, 0x81, 0x51, 0x16, 0xd0,
  0x8d, 0x7c, 0xa6, 0x1b, 0xea, 0x26, 0xb8, 0x87, 0x11, 0x83, 0x05, 0x00,
  0x41, 0x30, 0x88, 0xe4, 0x07, 0x77, 0x60, 0xa5, 0x55, 0x54, 0x65, 0x0c,
  0xc4, 0xe0, 0x0d, 0x46, 0x0c, 0x16, 0x00, 0x04, 0xc1, 0x20, 0x9a, 0x9f,
  0xdc, 0x11, 0x97, 0x70, 0x01, 0x17, 0xe4, 0x30, 0x46, 0x0c, 0x0c, 0x00,
  0x04, 0xc1, 0xe0, 0xa9, 0x9f, 0xde, 0x09, 0xac, 0x67, 0x82, 0xf8, 0x8c,
  0x18, 0x18, 0x00, 0x08, 0x82, 0xc1, 0x73, 0x3f, 0xbf, 0x13, 0x8c, 0x18,
  0x18, 0x00, 0x08, 0x82, 0xc1, 0x83, 0x3f, 0xb8, 0x13, 0xd8, 0x3c, 0x04,
  0xf2, 0xb1, 0xc3, 0x36, 0xe2, 0x63, 0x01, 0x6e, 0xc8, 0x67, 0xc4, 0xc0,
  0x00, 0x40, 0x10, 0x0c, 0x1e, 0xfe, 0x91, 0x9f, 0x60, 0xc4, 0xc0, 0x00,
  0x40, 0x10, 0x0c, 0x9e, 0xfe, 0x99, 0x1f, 0xc2, 0x04, 0xd3, 0x81, 0x8f,
  0x09, 0xa7, 0x03, 0x1f, 0x13, 0x4e, 0x47, 0x3e, 0x26, 0xa0, 0x8e, 0x7c,
  0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0xe0, 0x11, 0x21, 0xf5, 0x11, 0x46,
  0x0c, 0x0c, 0x00, 0x04, 0xc1, 0xe0, 0x19, 0xa1, 0xf5, 0x11, 0x4c, 0x70,
  0x1b, 0xf9, 0x98, 0xf0, 0x36, 0xf2, 0xb1, 0xd7, 0x11, 0xe2, 0x63, 0xb0,
  0x23, 0xc4, 0xc7, 0xfe, 0x80, 0x4d, 0xe2, 0x63, 0xc1, 0x6e, 0xc8, 0x67,
  0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0x1e, 0x15, 0x02, 0xa1, 0xc0, 0x82,
  0x40, 0x3e, 0x16, 0xb8, 0x8e, 0x7c, 0x6c, 0xb0, 0x1d, 0xf9, 0x58, 0x50,
  0x37, 0xf0, 0xb1, 0x60, 0x80, 0x8f, 0xc5, 0x4e, 0x40, 0x1f, 0x0b, 0x62,
  0x07, 0x3e, 0x05, 0x3d, 0x52, 0x41, 0x20, 0xe6, 0x88, 0x81, 0x7c, 0x2c,
  0x70, 0xe4, 0x63, 0xc1, 0x20, 0x1f, 0x0b, 0x0c, 0xf9, 0x8c, 0x18, 0x18,
  0x00, 0x08, 0x82, 0xc1, 0x83, 0x43, 0x20, 0xa4, 0x0b, 0x23, 0x06, 0x06,
  0x00, 0x82, 0x60, 0xf0, 0xe4, 0x50, 0x08, 0xe9, 0xc2, 0x70, 0x84, 0xc0,
  0x0b, 0xc1, 0x37, 0x1c, 0x21, 0xf0, 0x42, 0xf0, 0x95, 0x10, 0xe8, 0x74,
  0x83, 0x31, 0x3a, 0xc1, 0x70, 0x44, 0x40, 0x3a, 0xce, 0x37, 0xdd, 0x90,
  0x0b, 0xa5, 0x13, 0x4c, 0x37, 0xe4, 0x82, 0xe9, 0x08, 0xd3, 0x0d, 0xb9,
  0x70, 0x3a, 0xc3, 0x74, 0x43, 0x2e, 0xa0, 0x0e, 0x61, 0xf2, 0x60, 0xc0,
  0xc7, 0x8a, 0x43, 0x3e, 0x56, 0x20, 0xf2, 0xb1, 0x22, 0x91, 0x8f, 0x15,
  0x8a, 0x7c, 0x4c, 0x1e, 0x08, 0xf8, 0x98, 0x3c, 0x10, 0xf0, 0x31, 0x79,
  0x20, 0xe0, 0x63, 0xf2, 0x40, 0xc0, 0xc7, 0xd6, 0x45, 0x7e, 0xe4, 0x63,
  0xea, 0x32, 0x3f, 0xf2, 0xb1, 0xff, 0x10, 0xe2, 0x63, 0xff, 0x21, 0xc4,
  0xc7, 0x66, 0x44, 0x90, 0x8f, 0x05, 0xfb, 0x21, 0x1f, 0xab, 0x91, 0x41,
  0x3e, 0x16, 0xf0, 0x87, 0x7c, 0x6c, 0x38, 0x1d, 0xf8, 0x98, 0x70, 0x3a,
  0xf0, 0x31, 0xe1, 0x3e, 0xe4, 0x63, 0xc2, 0x7d, 0xc8, 0x67, 0xc4, 0xe0,
  0x01, 0x40, 0x10, 0x0c, 0xaa, 0x3a, 0xe2, 0xa1, 0xdd, 0xb9, 0x1d, 0x21,
  0x00, 0x1f, 0xf0, 0x69, 0xa3, 0x36, 0xfa, 0x21, 0xdf, 0x19, 0x4d, 0x08,
  0x00, 0x0b, 0xfc, 0x47, 0x3e, 0x23, 0x06, 0x0f, 0x00, 0x82, 0x60, 0x50,
  0xe1, 0xd1, 0x0f, 0xf5, 0x8e, 0xee, 0x14, 0xc4, 0xf8, 0x8c, 0x0f, 0x1c,
  0xc1, 0x91, 0x18, 0x85, 0xcf, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1,
  0x68, 0xc2, 0x20, 0x8c, 0x26, 0x10, 0x83, 0xc9, 0x07, 0x23, 0x1f, 0x93,
  0x0f, 0x46, 0x3e, 0x26, 0xd8, 0x07, 0x7c, 0x4c, 0xb0, 0x0f, 0xf8, 0x18,
  0x7c, 0x28, 0xf2, 0xb1, 0xa0, 0x56, 0xe0, 0x63, 0x01, 0x21, 0x1f, 0x13,
  0x08, 0xf9, 0x98, 0x7b, 0x48, 0xf0, 0x31, 0xf7, 0x90, 0xe0, 0x33, 0x62,
  0xf0, 0x00, 0x20, 0x08, 0x06, 0xd5, 0x29, 0xb9, 0x91, 0xfa, 0xa4, 0x8f,
  0x10, 0xc8, 0x8f, 0xfc, 0xfc, 0xd1, 0x1f, 0xc5, 0x11, 0xfc, 0x8c, 0x26,
  0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c, 0x83, 0x0d, 0xf8, 0x23,
  0x1f, 0x1b, 0xf2, 0x47, 0x3e, 0x26, 0xe4, 0x0f, 0x7c, 0x4c, 0xd0, 0x1f,
  0xf8, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0xc1, 0x23, 0x4b, 0xa8, 0x24,
  0x98, 0xfe, 0x04, 0xf1, 0x19, 0x31, 0x30, 0x00, 0x10, 0x04, 0x83, 0x87,
  0x96, 0x54, 0x69, 0x30, 0x21, 0x88, 0x8f, 0xed, 0x50, 0x10, 0x9f, 0x11,
  0x03, 0x03, 0x00, 0x41, 0x30, 0x78, 0x6e, 0xe9, 0x8f, 0x82, 0xe1, 0x08,
  0xc4, 0x7f, 0x88, 0x6f, 0x38, 0x02, 0xf9, 0x1f, 0xe2, 0x9b, 0x6e, 0x18,
  0xa1, 0x10, 0x12, 0xa6, 0x1b, 0x48, 0x48, 0x84, 0x04, 0x13, 0x0a, 0xf9,
  0x98, 0x60, 0xc8, 0xc7, 0x1c, 0x21, 0x3e, 0xe6, 0x08, 0xf1, 0x19, 0x31,
  0x58, 0x00, 0x10, 0x04, 0x83, 0xe8, 0x97, 0x4a, 0x49, 0x08, 0x16, 0x21,
  0x58, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0xe0, 0x09, 0xa7, 0x51, 0x0a,
  0x8c, 0x08, 0xe4, 0x63, 0x84, 0x20, 0x1f, 0x1b, 0x1e, 0xf9, 0x0c, 0x47,
  0xa0, 0x0f, 0x16, 0x7c, 0x17, 0x18, 0x65, 0x81, 0x1a, 0xc9, 0x67, 0xba,
  0x61, 0x8d, 0x82, 0xf6, 0x18, 0x31, 0x58, 0x00, 0x10, 0x04, 0x83, 0x08,
  0x9d, 0x5c, 0xc9, 0x74, 0x46, 0x07, 0x74, 0xc6, 0x40, 0x0c, 0xde, 0x60,
  0xc4, 0x60, 0x01, 0x40, 0x10, 0x0c, 0xa2, 0x74, 0x7a, 0x25, 0xdc, 0xb9,
  0x1d, 0xdb, 0x41, 0x0e, 0x63, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0x9e,
  0x75, 0x9a, 0xa5, 0xc0, 0x66, 0x28, 0x88, 0xcf, 0x88, 0x81, 0x01, 0x80,
  0x20, 0x18, 0x3c, 0xed, 0x54, 0x4b, 0xc1, 0x88, 0x81, 0x01, 0x80, 0x20,
  0x18, 0x3c, 0xee, 0xe4, 0x4a, 0x81, 0xa5, 0x47, 0x20, 0x1f, 0x3b, 0x58,
  0x25, 0x3e, 0x16, 0xb8, 0x8a, 0x7c, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1,
  0xe0, 0x91, 0x27, 0x74, 0x0a, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0xe0,
  0x99, 0xa7, 0x74, 0x22, 0x4c, 0xe0, 0x23, 0xf8, 0x98, 0xd0, 0x47, 0xf0,
  0x31, 0xa1, 0x8f, 0xe4, 0x63, 0x82, 0x1f, 0xc9, 0x67, 0xc4, 0xc0, 0x00,
  0x40, 0x10, 0x0c, 0x1e, 0x7c, 0x02, 0x27, 0x61, 0xc4, 0xc0, 0x00, 0x40,
  0x10, 0x0c, 0x9e, 0x7c, 0x0a, 0x27, 0xc1, 0x04, 0x32, 0x92, 0x8f, 0x09,
  0x65, 0x24, 0x1f, 0x2b, 0x25, 0x21, 0x3e, 0x66, 0x4a, 0x42, 0x7c, 0xec,
  0x0f, 0xc4, 0x26, 0x3e, 0x16, 0xc4, 0x8a, 0x7c, 0x46, 0x0c, 0x0c, 0x00,
  0x04, 0xc1, 0xe0, 0x01, 0x29, 0x7b, 0x0a, 0x2c, 0x08, 0xe4, 0x63, 0x01,
  0x29, 0xc9, 0xc7, 0x06, 0x56, 0x92, 0x8f, 0x05, 0x6b, 0x04, 0x1f, 0x0b,
  0x06, 0xf8, 0xd8, 0x29, 0x05, 0xf4, 0xb1, 0xe0, 0x94, 0xe0, 0x53, 0xd0,
  0x23, 0x15, 0x04, 0x62, 0x8e, 0x18, 0xc8, 0xc7, 0x02, 0x47, 0x3e, 0x16,
  0x0c, 0xf2, 0xb1, 0xc0, 0x90, 0xcf, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18,
  0x3c, 0x2e, 0x65, 0x4f, 0xba, 0x30, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06,
  0xcf, 0x4b, 0xdd, 0x93, 0x2e, 0x0c, 0x47, 0x08, 0xbc, 0x10, 0x7c, 0xc3,
  0x11, 0x02, 0x2f, 0x04, 0x5f, 0x09, 0x81, 0x4e, 0x37, 0x18, 0x79, 0x14,
  0x0c, 0x47, 0x04, 0x7a, 0xe4, 0x7c, 0xd3, 0x0d, 0xb9, 0xb0, 0x47, 0xc1,
  0x74, 0x43, 0x2e, 0xf0, 0x91, 0x30, 0xdd, 0x90, 0x0b, 0x7d, 0x34, 0x4c,
  0x37, 0xe4, 0x82, 0x1f, 0x11, 0x66, 0x0f, 0x06, 0x7c, 0xac, 0x38, 0xe4,
  0x63, 0x05, 0x22, 0x1f, 0x2b, 0x12, 0xf9, 0x58, 0xa1, 0xc8, 0xc7, 0xec,
  0x81, 0x80, 0x8f, 0xd9, 0x03, 0x01, 0x1f, 0xb3, 0x07, 0x02, 0x3e, 0x66,
  0x0f, 0x04, 0x7c, 0x2c, 0x7c, 0x78, 0x49, 0x3e, 0x06, 0x3e, 0xbd, 0x24,
  0x1f, 0x13, 0x4e, 0x46, 0x3e, 0x16, 0xbc, 0x8b, 0x7c, 0x6c, 0x48, 0x19,
  0xf9, 0x58, 0x00, 0x2f, 0xf2, 0xb1, 0x61, 0x8f, 0xe0, 0x63, 0xc2, 0x1e,
  0xc1, 0xc7, 0x84, 0x75, 0x91, 0x8f, 0x09, 0xeb, 0x22, 0x9f, 0x11, 0x83,
  0x07, 0x00, 0x41, 0x30, 0xa8, 0xd2, 0x0a, 0xa6, 0x5e, 0x69, 0x95, 0x84,
  0x80, 0x96, 0x68, 0x29, 0xac, 0xc2, 0x6a, 0xa6, 0x64, 0x69, 0x34, 0x21,
  0x00, 0x2c, 0x90, 0x27, 0xf9, 0x8c, 0x18, 0x3c, 0x00, 0x08, 0x82, 0x41,
  0xc5, 0x56, 0x33, 0x15, 0x4b, 0xae, 0x54, 0x10, 0xb7, 0x74, 0x4b, 0x64,
  0x45, 0x56, 0x36, 0x55, 0x4b, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04,
  0xa3, 0x09, 0x83, 0x30, 0x9a, 0x40, 0x0c, 0x66, 0x2e, 0x8c, 0x7c, 0xcc,
  0x5c, 0x18, 0xf9, 0x98, 0xa0, 0x2e, 0xf0, 0x31, 0x41, 0x5d, 0xe0, 0x63,
  0xe4, 0xa2, 0xc8, 0xc7, 0x82, 0xd4, 0x81, 0x8f, 0x05, 0x84, 0x7c, 0x4c,
  0x20, 0xe4, 0x63, 0xe2, 0x22, 0xc1, 0xc7, 0xc4, 0x45, 0x82, 0xcf, 0x88,
  0xc1, 0x03, 0x80, 0x20, 0x18, 0x54, 0x7b, 0x25, 0x56, 0xbe, 0xd4, 0x4b,
  0x42, 0x60, 0x4e, 0xe6, 0x34, 0x57, 0x73, 0x55, 0x56, 0xe4, 0x34, 0x9a,
  0x10, 0x00, 0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x0c, 0x36, 0xb0, 0x93,
  0x7c, 0x6c, 0x68, 0x27, 0xf9, 0x98, 0xd0, 0x4e, 0xf0, 0x31, 0xc1, 0x9d,
  0xe0, 0x33, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x8f, 0x69, 0xf1, 0x95,
  0x60, 0xee, 0x14, 0xc4, 0x67, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0x1e,
  0xd4, 0xf2, 0xab, 0xc1, 0x84, 0x20, 0x3e, 0xf6, 0x52, 0x41, 0x7c, 0x46,
  0x0c, 0x0c, 0x00, 0x04, 0xc1, 0xe0, 0x59, 0xad, 0xb9, 0x0a, 0x86, 0x23,
  0x10, 0x79, 0x22, 0xbe, 0xe1, 0x08, 0x64, 0x9e, 0x88, 0x6f, 0xba, 0xe1,
  0x9e, 0xea, 0x49, 0x98, 0x6e, 0xc0, 0x27, 0x7b, 0x12, 0x4c, 0x28, 0xe4,
  0x63, 0x82, 0x21, 0x1f, 0x73, 0x84, 0xf8, 0x98, 0x23, 0xc4, 0x67, 0xc4,
  0x60, 0x01, 0x40, 0x10, 0x0c, 0xa2, 0xd9, 0xca, 0x2b, 0x21, 0x58, 0x84,
  0x60, 0x19, 0x31, 0x30, 0x00, 0x10, 0x04, 0x83, 0xa7, 0xb6, 0xee, 0x2a,
  0x30, 0x22, 0x90, 0x8f, 0x11, 0x82, 0x7c, 0x6c, 0x78, 0xe4, 0x33, 0x1c,
  0xc1, 0x4b, 0x58, 0xf0, 0x5d, 0x60, 0x94, 0x05, 0x3a, 0x25, 0x9f, 0xe9,
  0x86, 0x9d, 0x0a, 0xc2, 0x65, 0xc4, 0x60, 0x01, 0x40, 0x10, 0x0c, 0x22,
  0xde, 0x12, 0x2d, 0x3d, 0xba, 0x23, 0x3a, 0x1a, 0x03, 0x31, 0x78, 0x83,
  0x11, 0x83, 0x05, 0x00, 0x41, 0x30, 0x88, 0x7a, 0x6b, 0xb4, 0x58, 0x69,
  0x95, 0x54, 0x09, 0x39, 0x8c, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0x78,
  0x7e, 0xeb, 0xb4, 0x02, 0x3b, 0xa9, 0x20, 0x3e, 0x23, 0x06, 0x06, 0x00,
  0x82, 0x60, 0xf0, 0x84, 0x57, 0x6a, 0x05, 0x23, 0x06, 0x06, 0x00, 0x82,
  0x60, 0xf0, 0x88, 0x97, 0x68, 0x05, 0xd6, 0x2b, 0x81, 0x7c, 0xec, 0x00,
  0x9d, 0xf8, 0x58, 0x20, 0x3a, 0xf2, 0x19, 0x31, 0x30, 0x00, 0x10, 0x04,
  0x83, 0xc7, 0xbc, 0x78, 0x2b, 0x18, 0x31, 0x30, 0x00, 0x10, 0x04, 0x83,
  0xe7, 0xbc, 0x7a, 0x8b, 0x30, 0x01, 0xae, 0xe0, 0x63, 0x42, 0x5c, 0xc1,
  0xc7, 0x84, 0xb8, 0x92, 0x8f, 0x09, 0x72, 0x25, 0x9f, 0x11, 0x03, 0x03,
  0x00, 0x41, 0x30, 0x78, 0xd8, 0x8b, 0xb6, 0x84, 0x11, 0x03, 0x03, 0x00,
  0x41, 0x30, 0x78, 0xda, 0xab, 0xb6, 0x04, 0x13, 0x70, 0x4a, 0x3e, 0x26,
  0xe4, 0x94, 0x7c, 0x2c, 0xaf, 0x84, 0xf8, 0x98, 0x5e, 0x09, 0xf1, 0xb1,
  0x3f, 0xb0, 0xa1, 0xf8, 0x58, 0x50, 0x3a, 0xf2, 0x19, 0x31, 0x30, 0x00,
  0x10, 0x04, 0x83, 0x87, 0xbe, 0xd4, 0x2b, 0xb0, 0x20, 0x90, 0x8f, 0x05,
  0x78, 0x25, 0x1f, 0x1b, 0x40, 0x4b, 0x3e, 0x16, 0xfc, 0x14, 0x7c, 0x2c,
  0x18, 0xe0, 0x63, 0x7b, 0x15, 0xd0, 0xc7, 0x82, 0xbd, 0x82, 0x4f, 0x41,
  0x8f, 0x54, 0x10, 0x88, 0x39, 0x62, 0x20, 0x1f, 0x0b, 0x1c, 0xf9, 0x58,
  0x30, 0xc8, 0xc7, 0x02, 0x43, 0x3e, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60,
  0xf0, 0x88, 0x98, 0x7a, 0xe9, 0xc2, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18,
  0x3c, 0x23, 0xb6, 0x5e, 0xba, 0x30, 0x1c, 0x21, 0xf0, 0x42, 0xf0, 0x0d,
  0x47, 0x08, 0xbc, 0x10, 0x7c, 0x25, 0x04, 0x3a, 0xdd, 0x60, 0xb4, 0x55,
  0x30, 0x1c, 0x11, 0xb8, 0x95, 0xf3, 0x4d, 0x37, 0xe4, 0xc2, 0x5b, 0x05,
  0xd3, 0x0d, 0xb9, 0x00, 0x57, 0xc2, 0x74, 0x43, 0x2e, 0xc4, 0xd5, 0x30,
  0xdd, 0x90, 0x0b, 0x72, 0x45, 0x18, 0x3d, 0x18, 0xf0, 0xb1, 0xe2, 0x90,
  0x8f, 0x15, 0x88, 0x7c, 0xac, 0x48, 0xe4, 0x63, 0x85, 0x22, 0x1f, 0xa3,
  0x07, 0x02, 0x3e, 0x46, 0x0f, 0x04, 0x7c, 0x8c, 0x1e, 0x08, 0xf8, 0x18,
  0x3d, 0x10, 0xf0, 0x31, 0x5b, 0x7a, 0x2d, 0xf9, 0x58, 0x2d, 0xc1, 0x96,
  0x7c, 0xec, 0x96, 0x60, 0x4b, 0x3e, 0x66, 0x4b, 0xb1, 0x25, 0x1f, 0x23,
  0x04, 0xf8, 0x18, 0x21, 0xc0, 0xc7, 0xfe, 0x47, 0x90, 0x8f, 0x05, 0xe7,
  0x23, 0x1f, 0x0b, 0xa1, 0x41, 0x3e, 0x16, 0xa0, 0x8f, 0x7c, 0x6c, 0x98,
  0x2b, 0xf8, 0x98, 0x30, 0x57, 0xf0, 0x31, 0x61, 0x7c, 0xe4, 0x63, 0xc2,
  0xf8, 0xc8, 0x67, 0xc4, 0xe0, 0x01, 0x40, 0x10, 0x0c, 0xaa, 0x30, 0x43,
  0xb1, 0xd3, 0x1a, 0x2d, 0x21, 0x60, 0x2d, 0xd6, 0xca, 0xb1, 0x1c, 0x5b,
  0x31, 0xd5, 0x1a, 0x4d, 0x08, 0x00, 0x0b, 0xd4, 0x4b, 0x3e, 0x23, 0x06,
  0x0f, 0x00, 0x82, 0x60, 0x50, 0x91, 0xd9, 0x8a, 0xa5, 0x96, 0x69, 0x15,
  0xc4, 0x6b, 0xbd, 0x16, 0x8f, 0xf1, 0x98, 0x8b, 0xb5, 0xd6, 0x68, 0x42,
  0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20, 0x8c, 0x26, 0x10, 0xc3,
  0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x68, 0x67, 0x26, 0x63, 0xaa, 0xb5,
  0x62, 0xa3, 0x09, 0xc1, 0x60, 0xe0, 0xe3, 0xc8, 0xc7, 0xc0, 0xc7, 0x91,
  0x8f, 0x09, 0xe4, 0x03, 0x1f, 0x13, 0xc8, 0x07, 0x3e, 0x23, 0x06, 0x06,
  0x00, 0x82, 0x60, 0xf0, 0xc8, 0x19, 0x9a, 0x15, 0xa6, 0x5b, 0x41, 0x7c,
  0x2c, 0x70, 0xe4, 0x63, 0x01, 0x02, 0x1f, 0x0b, 0x0c, 0xf9, 0x98, 0x60,
  0xc8, 0xc7, 0x7c, 0xc7, 0x82, 0x8f, 0xf9, 0x8e, 0x05, 0x9f, 0x11, 0x83,
  0x07, 0x00, 0x41, 0x30, 0xa8, 0xee, 0xcc, 0xc7, 0x74, 0x2b, 0xb7, 0x84,
  0x40, 0xbc, 0xc4, 0xeb, 0xcd, 0xde, 0x2c, 0xcc, 0xc0, 0x6b, 0x34, 0x21,
  0x00, 0x46, 0x13, 0x84, 0x60, 0x34, 0x61, 0x18, 0x6c, 0x40, 0x2f, 0xf9,
  0xd8, 0x90, 0x5e, 0xf2, 0x31, 0x21, 0xbd, 0xe0, 0x63, 0x82, 0x7a, 0xc1,
  0x67, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0x1e, 0x51, 0xc3, 0x33, 0xc1,
  0xd4, 0x2b, 0x88, 0xcf, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x3c, 0xa4,
  0xa6, 0x67, 0x83, 0x09, 0x41, 0x7c, 0x6c, 0xc5, 0x82, 0xf8, 0x8c, 0x18,
  0x18, 0x00, 0x08, 0x82, 0xc1, 0x73, 0x6a, 0x6f, 0x16, 0x0c, 0x47, 0x20,
  0xee, 0x45, 0x7c, 0xc3, 0x11, 0xc8, 0x7b, 0x11, 0xdf, 0x74, 0xc3, 0x7c,
  0xc5, 0x97, 0x30, 0xdd, 0x40, 0x5f, 0xf2, 0x25, 0x98, 0x50, 0xc8, 0xc7,
  0x04, 0x43, 0x3e, 0xe6, 0x08, 0xf1, 0x31, 0x47, 0x88, 0xcf, 0x88, 0xc1,
  0x02, 0x80, 0x20, 0x18, 0x44, 0xaf, 0x56, 0x67, 0x42, 0xb0, 0x08, 0xc1,
  0x32, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x4f, 0xac, 0xcd, 0x59, 0x60,
  0x44, 0x20, 0x1f, 0x23, 0x04, 0xf9, 0xd8, 0xf0, 0xc8, 0x67, 0x38, 0x02,
  0xb7, 0xb0, 0xe0, 0xbb, 0xc0, 0x28, 0x0b, 0x6c, 0x4c, 0x3e, 0xd3, 0x0d,
  0x37, 0x16, 0xf4, 0xce, 0x88, 0xc1, 0x02, 0x80, 0x20, 0x18, 0x44, 0xb8,
  0xe6, 0x67, 0x76, 0x35, 0x57, 0x70, 0x35, 0x06, 0x62, 0x30, 0x07, 0x23,
  0x06, 0x0b, 0x00, 0x82, 0x60, 0x10, 0xe5, 0xda, 0x9f, 0xa1, 0xd6, 0x69,
  0x99, 0x16, 0x72, 0x18, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0xf0, 0xec,
  0xda, 0xa8, 0x05, 0x36, 0x62, 0x41, 0x7c, 0x46, 0x0c, 0x0c, 0x00, 0x04,
  0xc1, 0xe0, 0xe9, 0xb5, 0x52, 0x0b, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1,
  0xe0, 0xf1, 0x35, 0x3f, 0x0b, 0x2c, 0x77, 0x02, 0xf9, 0xd8, 0xc1, 0x47,
  0xf1, 0xb1, 0xc0, 0x8f, 0xe4, 0x33, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06,
  0x8f, 0xb8, 0xe1, 0x5a, 0x30, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0xcf,
  0xb8, 0xe5, 0x1a, 0x61, 0x02, 0x9b, 0xc1, 0xc7, 0x84, 0x36, 0x83, 0x8f,
  0x09, 0x6d, 0x26, 0x1f, 0x13, 0xdc, 0x4c, 0x3e, 0x23, 0x06, 0x06, 0x00,
  0x82, 0x60, 0xf0, 0xa0, 0x1b, 0xac, 0x09, 0x23, 0x06, 0x06, 0x00, 0x82,
  0x60, 0xf0, 0xa4, 0x5b, 0xac, 0x09, 0x26, 0xd0, 0x98, 0x7c, 0x4c, 0xa8,
  0x31, 0xf9, 0x58, 0x9d, 0x09, 0xf1, 0x31, 0x3b, 0x13, 0xe2, 0x63, 0xa3,
  0x20, 0x53, 0xf1, 0xb1, 0x20, 0x94, 0xe4, 0x33, 0x62, 0x60, 0x00, 0x20,
  0x08, 0x06, 0x0f, 0xbc, 0x99, 0x5b, 0x60, 0x41, 0x20, 0x1f, 0x0b, 0xe8,
  0x4c, 0x3e, 0x36, 0xf0, 0x99, 0x7c, 0x2c, 0xd8, 0x31, 0xf8, 0x58, 0x30,
  0xc0, 0xc7, 0xee, 0x2c, 0xa0, 0x8f, 0x05, 0x77, 0x06, 0x9f, 0x82, 0x1e,
  0xa9, 0x20, 0x10, 0x73, 0xc4, 0x40, 0x3e, 0x16, 0x38, 0xf2, 0xb1, 0x60,
  0x90, 0x8f, 0x05, 0x86, 0x7c, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0xe0,
  0xf1, 0x37, 0x73, 0xf3, 0x85, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0x78,
  0xfe, 0xed, 0xdc, 0x7c, 0x61, 0x38, 0x42, 0x00, 0x87, 0xe0, 0x1b, 0x8e,
  0x10, 0xc0, 0x21, 0xf8, 0x4a, 0x08, 0x74, 0xba, 0xc1, 0x48, 0xb3, 0x60,
  0x38, 0x22, 0x50, 0x33, 0xe7, 0x9b, 0x6e, 0xe8, 0x85, 0x35, 0x0b, 0xa6,
  0x1b, 0x7a, 0x81, 0xcd, 0x84, 0xe9, 0x86, 0x5e, 0x68, 0xb3, 0x61, 0xba,
  0xa1, 0x17, 0xdc, 0x8c, 0x30, 0x7e, 0x30, 0xe0, 0x63, 0xc5, 0x21, 0x1f,
  0x2b, 0x10, 0xf9, 0x58, 0x91, 0xc8, 0xc7, 0x0a, 0x45, 0x3e, 0xc6, 0x0f,
  0x04, 0x7c, 0x8c, 0x1f, 0x08, 0xf8, 0x18, 0x3f, 0x10, 0xf0, 0x31, 0x7e,
  0x20, 0xe0, 0x63, 0xfa, 0xc0, 0x0f, 0xf1, 0x31, 0x7d, 0xe0, 0x87, 0xf8,
  0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x81, 0xf6, 0x72, 0xfa, 0x26, 0x67,
  0xeb, 0x36, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x60, 0xfa, 0x54, 0xc8,
  0xc7, 0x82, 0x41, 0x3e, 0xc6, 0x4f, 0x86, 0x7c, 0x2c, 0x20, 0xe4, 0x63,
  0x83, 0x9b, 0xc1, 0xc7, 0x04, 0x37, 0x83, 0xcf, 0x88, 0xc1, 0x01, 0x80,
  0x20, 0x18, 0x68, 0x38, 0x37, 0x72, 0x7b, 0x36, 0x6f, 0xa3, 0x09, 0x81,
  0x30, 0x9a, 0x20, 0x0c, 0x56, 0x08, 0xf2, 0xb1, 0x42, 0x90, 0xcf, 0x88,
  0xc1, 0x03, 0x80, 0x20, 0x18, 0x54, 0x3f, 0x67, 0x72, 0xa5, 0x16, 0x6a,
  0x42, 0xa0, 0x6a, 0xaa, 0x76, 0x73, 0x37, 0x97, 0x72, 0xa8, 0x36, 0x9a,
  0x10, 0x00, 0x16, 0xa0, 0x9b, 0x7c, 0x46, 0x0c, 0x1e, 0x00, 0x04, 0xc1,
  0xa0, 0x12, 0xbb, 0x94, 0x3b, 0x35, 0x52, 0x2b, 0x88, 0x56, 0x6b, 0x35,
  0x9d, 0xd3, 0x39, 0x96, 0x5b, 0xb5, 0xd1, 0x84, 0x00, 0x18, 0x4d, 0x10,
  0x82, 0xd1, 0x84, 0x41, 0x18, 0x4d, 0x20, 0x86, 0x11, 0x83, 0x03, 0x00,
  0x41, 0x30, 0xd0, 0xca, 0x0e, 0xe6, 0x50, 0x4d, 0xe7, 0x46, 0x13, 0x02,
  0x60, 0x34, 0x41, 0x08, 0x46, 0x13, 0x06, 0x61, 0x34, 0x81, 0x18, 0x4c,
  0xa0, 0xe4, 0x63, 0x02, 0x25, 0x1f, 0x13, 0x0c, 0xf8, 0x98, 0x60, 0xc0,
  0xc7, 0x40, 0xe2, 0x91, 0x8f, 0x05, 0x27, 0x01, 0x1f, 0x0b, 0x08, 0xf9,
  0x98, 0x40, 0xc8, 0x67, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0x34, 0xb9,
  0xeb, 0xb9, 0x5a, 0x63, 0xb9, 0xd1, 0x84, 0x00, 0x18, 0x4d, 0x10, 0x02,
  0x13, 0x34, 0xf8, 0x98, 0xa0, 0xc1, 0x67, 0xc4, 0xe0, 0x01, 0x40, 0x10,
  0x0c, 0xaa, 0xbc, 0x03, 0x3b, 0x5e, 0xdb, 0x35, 0x21, 0x20, 0x37, 0x72,
  0x8b, 0xbb, 0xb8, 0x1b, 0x3b, 0x71, 0x1b, 0x4d, 0x08, 0x80, 0xd1, 0x04,
  0x21, 0x18, 0x4d, 0x18, 0x06, 0x1b, 0xd4, 0x4d, 0x3e, 0x36, 0xac, 0x9b,
  0x7c, 0x4c, 0x58, 0x37, 0xf8, 0x98, 0xc0, 0x6e, 0xf0, 0x19, 0x31, 0x30,
  0x00, 0x10, 0x04, 0x83, 0x87, 0xf4, 0xf4, 0x4e, 0x30, 0x76, 0x0b, 0xe2,
  0x33, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x8f, 0xe9, 0xf1, 0xdd, 0x60,
  0x42, 0x10, 0x1f, 0x6b, 0xb9, 0x20, 0x3e, 0x23, 0x06, 0x06, 0x00, 0x82,
  0x60, 0xf0, 0xa4, 0x5e, 0xdc, 0x05, 0xc3, 0x11, 0x08, 0xbc, 0x11, 0xdf,
  0x70, 0x04, 0x12, 0x6f, 0xc4, 0x37, 0xdd, 0x50, 0x6f, 0xf3, 0x26, 0x4c,
  0x37, 0xd8, 0x1b, 0xbd, 0x09, 0x26, 0x14, 0xf2, 0x31, 0xc1, 0x90, 0x8f,
  0x39, 0x42, 0x7c, 0xcc, 0x11, 0xe2, 0x33, 0x62, 0xb0, 0x00, 0x20, 0x08,
  0x06, 0x51, 0xec, 0xdd, 0x9d, 0x10, 0x2c, 0x42, 0xb0, 0x8c, 0x18, 0x18,
  0x00, 0x08, 0x82, 0xc1, 0x33, 0x7b, 0x75, 0x17, 0x18, 0x11, 0xc8, 0xc7,
  0x08, 0x41, 0x3e, 0x36, 0x3c, 0xf2, 0x19, 0x31, 0x38, 0x00, 0x10, 0x04,
  0x83, 0x2e, 0xf6, 0xfa, 0xae, 0xde, 0xd6, 0x6e, 0x34, 0x21, 0x08, 0x86,
  0x1b, 0x02, 0xd7, 0x03, 0x83, 0xe1, 0x88, 0x5e, 0xdb, 0x82, 0xef, 0x02,
  0xa3, 0x2c, 0xd8, 0x39, 0xf9, 0x4c, 0x37, 0xf0, 0x5c, 0x40, 0x8c, 0x18,
  0x2c, 0x00, 0x08, 0x82, 0x41, 0xd4, 0x7b, 0xa3, 0xb7, 0x67, 0x78, 0x56,
  0x67, 0x69, 0x80, 0x06, 0x7a, 0x30, 0x62, 0xb0, 0x00, 0x20, 0x08, 0x06,
  0x91, 0xef, 0x91, 0x5e, 0xab, 0xb1, 0xda, 0xaa, 0x2d, 0x4a, 0x32, 0x62,
  0x60, 0x00, 0x20, 0x08, 0x06, 0x0f, 0xf8, 0xa1, 0x5e, 0x60, 0x28, 0x17,
  0xc4, 0x67, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0x1e, 0xf1, 0x53, 0xbd,
  0x60, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0x9e, 0xf1, 0x1b, 0xbd, 0xc0,
  0x7c, 0x29, 0x90, 0x8f, 0x1d, 0xa1, 0x15, 0x1f, 0x0b, 0x46, 0x4b, 0x3e,
  0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0xf0, 0x9c, 0x5f, 0xef, 0x05, 0x23,
  0x06, 0x06, 0x00, 0x82, 0x60, 0xf0, 0xa0, 0x9f, 0xef, 0x11, 0x26, 0xc4,
  0x1d, 0x7c, 0x4c, 0x90, 0x3b, 0xf8, 0x98, 0x20, 0x77, 0xf2, 0x31, 0x61,
  0xee, 0xe4, 0x33, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x4f, 0xfb, 0xd5,
  0x9e, 0x30, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x8f, 0xfb, 0xd9, 0x9e,
  0x60, 0x42, 0xce, 0xc9, 0xc7, 0x04, 0x9d, 0x93, 0x8f, 0xe9, 0x9d, 0x10,
  0x1f, 0xdb, 0x3b, 0x21, 0x3e, 0xa6, 0x0a, 0x37, 0x16, 0x1f, 0x0b, 0x4c,
  0x4b, 0x3e, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0xf0, 0xd4, 0xdf, 0xfa,
  0x05, 0x16, 0x04, 0xf2, 0xb1, 0x20, 0xef, 0xe4, 0x63, 0x43, 0xe8, 0xc9,
  0xc7, 0x02, 0xb0, 0x83, 0x8f, 0x05, 0x03, 0x7c, 0x8c, 0xef, 0x02, 0xfa,
  0x58, 0xc0, 0x77, 0xf0, 0x29, 0xe8, 0x91, 0x0a, 0x02, 0x31, 0x47, 0x0c,
  0xe4, 0x63, 0x81, 0x23, 0x1f, 0x0b, 0x06, 0xf9, 0x58, 0x60, 0xc8, 0x67,
  0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0x9e, 0x11, 0x0c, 0xd6, 0x0f, 0x1d,
  0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0xe0, 0x21, 0xc1, 0x80, 0xfd, 0xd0,
  0x61, 0x38, 0x42, 0x50, 0x87, 0xe0, 0x1b, 0x8e, 0x10, 0xd4, 0x21, 0xf8,
  0x4a, 0x08, 0x74, 0xba, 0xc1, 0x70, 0xbb, 0x60, 0x38, 0x22, 0x78, 0x3b,
  0xe7, 0x9b, 0x6e, 0x20, 0x07, 0xb8, 0x0b, 0xa6, 0x1b, 0xc8, 0x21, 0xee,
  0x84, 0xe9, 0x06, 0x72, 0x90, 0xbb, 0x61, 0xba, 0x81, 0x1c, 0xe6, 0x8e,
  0xb0, 0x92, 0x30, 0xe0, 0x63, 0xc5, 0x21, 0x1f, 0x2b, 0x10, 0xf9, 0x58,
  0x91, 0xc8, 0xc7, 0x0a, 0x45, 0x3e, 0x56, 0x12, 0x04, 0x7c, 0xac, 0x24,
  0x08, 0xf8, 0x58, 0x49, 0x10, 0xf0, 0xb1, 0x92, 0x20, 0xe0, 0x33, 0x62,
  0x70, 0x00, 0x20, 0x08, 0x06, 0xd7, 0x0c, 0x06, 0xef, 0x97, 0x88, 0x9e,
  0xfd, 0x5d, 0x40, 0x1f, 0x33, 0x02, 0xf9, 0x98, 0x21, 0xc8, 0xc7, 0x8c,
  0x41, 0x3e, 0x66, 0x10, 0xf2, 0x19, 0x31, 0x70, 0x00, 0x10, 0x04, 0x83,
  0xc6, 0x07, 0x03, 0xfd, 0x13, 0x3d, 0xbd, 0xcb, 0x3b, 0x12, 0x0c, 0x88,
  0x41, 0x08, 0xd0, 0x6f, 0x96, 0x60, 0xc0, 0x80, 0x18, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x5b, 0x06, 0xed, 0x59, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
